var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/controllers/AppController.html",[0,1.465,1,1.993]],["body/controllers/AppController.html",[0,2.232,1,3.035,2,1.736,3,0.392,4,0.339,5,0.288,6,3.081,7,0.567,8,1.307,9,4.618,10,1.736,11,0.034,12,0.772,13,3.706,14,0.93,15,1.307,16,0.557,17,1.583,18,1.86,19,0.7,20,2.249,21,1.325,22,2.715,23,3.081,24,0.392,25,0.103,26,2.055,27,1.881,28,1.111,29,3.706,30,1.736,31,1.736,32,1.213,33,3.706,34,0.026,35,0.026]],["title/modules/AppModule.html",[36,1.221,37,1.993]],["body/modules/AppModule.html",[1,2.732,2,1.705,3,0.265,4,0.229,5,0.194,8,0.687,11,0.035,12,0.521,14,0.628,15,0.687,16,0.625,19,0.472,21,0.895,22,2.691,23,2.08,24,0.265,25,0.069,34,0.02,35,0.02,36,1.674,37,3.641,38,1.291,39,1.291,40,1.595,41,1.595,42,1.291,43,2.732,44,1.595,45,2.08,46,2.08,47,2.08,48,2.979,49,2.691,50,2.319,51,1.595,52,1.595,53,1.802,54,2.62,55,2.502,56,3.638,57,4.707,58,2.502,59,0.751,60,0.573,61,0.383,62,0.628,63,2.502,64,2.62,65,3.638,66,2.08,67,1.802,68,2.08,69,3.638,70,2.08,71,3.638,72,2.08,73,2.08,74,1.429,75,3.025,76,2.502,77,1.595,78,2.502,79,1.802,80,2.502,81,2.319,82,2.502,83,2.502,84,2.502,85,1.173,86,2.62,87,2.08,88,2.502,89,2.502,90,2.319,91,1.802,92,2.502,93,2.502,94,2.502,95,2.502,96,2.502,97,1.802,98,2.08,99,2.08,100,2.502,101,2.08,102,2.502,103,2.502,104,3.638,105,2.502,106,1.429,107,2.502]],["title/injectables/AppService.html",[22,1.613,108,0.479]],["body/injectables/AppService.html",[3,0.355,4,0.307,5,0.261,7,0.514,8,1.225,9,4.445,11,0.034,12,1.045,14,0.842,15,1.225,16,0.472,17,1.434,18,2.088,19,0.634,20,2.445,21,1.2,22,2.303,24,0.355,25,0.093,26,2.088,27,1.911,28,1.339,30,2.092,31,1.573,32,1.099,34,0.024,35,0.024,59,1.007,60,0.768,61,0.514,62,0.842,108,0.683,109,1.2,110,2.791,111,1.225,112,3.357,113,4.465,114,3.357,115,1.311,116,1.311,117,4.465,118,3.357,119,2.418,120,2.791,121,2.791,122,2.791,123,2.791,124,2.791,125,3.357,126,2.791,127,2.791,128,2.791,129,2.791]],["title/controllers/AuthController.html",[0,1.465,130,1.993]],["body/controllers/AuthController.html",[0,1.568,2,1.568,3,0.354,4,0.306,5,0.26,7,0.512,8,1.223,10,1.568,11,0.034,12,0.697,14,0.839,16,0.588,18,1.739,19,0.632,24,0.354,25,0.093,26,1.306,27,1.592,28,1.003,32,1.095,34,0.024,35,0.024,59,1.003,60,0.766,61,0.512,62,0.839,130,2.838,131,2.781,132,2.781,133,3.345,134,2.139,135,4.454,136,3.345,137,3.345,138,3.345,139,3.345,140,5.008,141,2.298,142,2.781,143,2.781,144,4.454,145,2.781,146,2.409,147,2.139,148,2.781,149,2.132,150,3.345,151,2.781,152,2.838,153,3.345,154,3.345,155,3.345,156,3.345,157,2.781,158,3.345,159,3.345,160,3.345,161,1.568,162,3.345]],["title/modules/AuthModule.html",[36,1.221,48,1.785]],["body/modules/AuthModule.html",[2,1.826,3,0.291,4,0.252,5,0.214,11,0.034,16,0.609,17,1.176,19,0.52,20,2.101,21,0.984,24,0.291,25,0.076,32,0.901,34,0.021,35,0.021,36,1.766,38,1.42,39,1.42,40,1.754,41,1.754,42,1.42,43,2.882,44,2.882,48,3.43,49,2.779,50,2.483,51,1.754,52,1.754,54,3.257,70,3.239,130,2.882,134,1.176,147,2.545,148,2.288,163,2.288,164,2.753,165,2.288,166,2.288,167,3.076,168,3.076,169,2.753,170,2.753,171,2.753,172,3.896,173,1.42,174,3.896,175,1.983,176,2.753,177,2.753,178,2.753,179,2.753,180,1.754,181,2.753,182,2.753,183,2.753,184,2.288,185,2.753,186,2.288,187,2.753]],["title/injectables/AuthService.html",[108,0.479,147,1.336]],["body/injectables/AuthService.html",[3,0.219,4,0.189,5,0.161,7,0.316,8,0.866,11,0.034,12,0.96,14,0.96,15,1.335,16,0.535,17,0.883,18,1.673,19,0.39,20,2.161,21,0.739,24,0.219,25,0.057,26,1.899,27,1.738,28,1.458,30,1.479,31,0.969,32,1.253,34,0.017,35,0.017,59,1.284,60,0.98,61,0.656,62,1.075,85,2.007,108,0.483,109,0.739,111,0.866,115,0.807,116,0.807,134,2.283,141,2.508,147,1.348,161,1.793,175,1.489,186,1.719,188,1.719,189,3.156,190,2.273,191,3.156,192,2.067,193,2.278,194,5.057,195,3.156,196,3.156,197,2.9,198,2.067,199,2.623,200,2.634,201,2.067,202,3.182,203,3.156,204,1.793,205,2.067,206,0.969,207,3.156,208,3.156,209,2.067,210,2.067,211,2.067,212,2.273,213,2.067,214,2.067,215,4.283,216,3.156,217,3.156,218,3.156,219,2.067,220,3.182,221,2.067,222,2.067,223,1.719,224,1.719,225,1.719,226,2.067,227,2.067,228,2.067,229,2.623,230,1.719,231,2.067,232,2.067,233,2.067,234,2.067,235,2.067,236,2.067,237,1.719,238,2.067,239,2.067,240,1.719,241,2.067]],["title/classes/CreateUserDto.html",[25,0.087,242,1.613]],["body/classes/CreateUserDto.html",[3,0.363,4,0.314,5,0.266,7,0.525,10,2.526,11,0.034,12,1.123,15,1.636,16,0.363,24,0.363,25,0.126,34,0.024,35,0.024,61,0.825,62,1.353,111,1.243,204,2.375,206,2.375,242,2.335,243,1.769,244,4.66,245,2.469,246,3.651,247,3.651,248,3.429,249,3.429,250,4.528,251,3.429,252,3.429,253,4.482,254,3.429,255,3.764,256,5.069,257,5.069,258,2.469]],["title/classes/HttpExceptionFilter.html",[25,0.087,259,2.252]],["body/classes/HttpExceptionFilter.html",[3,0.324,4,0.28,5,0.238,7,0.468,8,1.151,11,0.034,12,0.637,14,0.767,16,0.444,19,0.577,24,0.324,25,0.085,28,0.917,34,0.023,35,0.023,59,0.917,60,0.7,61,0.468,62,0.767,64,2.203,85,2.61,106,2.394,230,4.279,243,1.578,259,3.02,260,3.485,261,2.543,262,4.784,263,4.193,264,3.977,265,5.147,266,3.059,267,4.784,268,4.784,269,3.059,270,3.485,271,2.203,272,2.543,273,3.059,274,3.059,275,3.059,276,2.543,277,3.059,278,4.193,279,4.193,280,3.059,281,3.059,282,5.147,283,2.543,284,4.193,285,3.059,286,3.485,287,3.059,288,4.193,289,3.059,290,3.059,291,3.059,292,3.059,293,2.543,294,3.059,295,3.059,296,3.059]],["title/injectables/JwtAuthGuard.html",[108,0.479,297,1.993]],["body/injectables/JwtAuthGuard.html",[3,0.468,4,0.404,5,0.343,11,0.033,16,0.562,19,0.834,24,0.468,25,0.123,34,0.029,35,0.029,108,0.813,109,1.58,173,2.28,297,3.387,298,3.183,299,3.183,300,3.674,301,2.524,302,4.42]],["title/interfaces/JwtPayload.html",[200,1.785,303,1.993]],["body/interfaces/JwtPayload.html",[3,0.427,4,0.369,5,0.313,7,0.617,11,0.033,15,1.502,24,0.427,34,0.027,35,0.027,61,0.838,62,1.437,111,1.379,200,2.868,237,4.762,303,2.569,304,4.031,305,3.351,306,5.728,307,5.728,308,3.829]],["title/injectables/JwtStrategy.html",[108,0.479,167,1.785]],["body/injectables/JwtStrategy.html",[3,0.311,4,0.269,5,0.228,7,0.45,8,1.119,11,0.034,12,0.975,14,0.737,16,0.582,17,1.255,18,1.976,19,0.555,20,2.41,21,1.05,24,0.311,25,0.082,26,2.075,27,1.9,28,1.223,30,1.911,31,1.376,32,0.962,34,0.022,35,0.022,59,1.223,60,0.933,61,0.624,62,1.023,108,0.624,109,1.05,111,1.119,115,1.147,116,1.147,134,2.001,141,2.103,147,2.35,161,1.376,167,2.328,173,1.515,180,1.872,184,2.442,190,2.937,199,3.39,200,2.888,202,2.442,301,1.677,309,2.442,310,2.442,311,4.077,312,2.937,313,4.077,314,2.442,315,2.937,316,2.442,317,2.116,318,2.442,319,2.937,320,2.442,321,2.442,322,2.937,323,2.937,324,2.937,325,2.937]],["title/injectables/LocalAuthGuard.html",[108,0.479,149,1.993]],["body/injectables/LocalAuthGuard.html",[3,0.468,4,0.404,5,0.343,11,0.033,16,0.562,19,0.834,24,0.468,25,0.123,34,0.029,35,0.029,108,0.813,109,1.58,149,3.387,173,2.28,299,3.183,300,3.674,301,2.524,326,3.674,327,4.42]],["title/injectables/LocalStrategy.html",[108,0.479,168,1.785]],["body/injectables/LocalStrategy.html",[3,0.352,4,0.304,5,0.258,7,0.509,8,1.217,11,0.034,12,0.923,14,0.834,15,1.566,16,0.563,19,0.627,24,0.352,25,0.092,27,1.188,30,1.557,32,1.088,34,0.024,35,0.024,59,1.33,60,1.015,61,0.679,62,1.112,108,0.679,109,1.188,134,2.132,141,2.287,147,2.438,157,2.762,161,1.557,168,2.532,173,1.714,190,3.193,204,2.599,206,2.078,301,1.897,310,2.762,314,2.762,316,2.762,317,2.393,318,2.762,320,2.762,321,2.762,328,2.762,329,3.322,330,4.434,331,3.322,332,2.393,333,3.322,334,3.322,335,3.322]],["title/injectables/LoggerMiddleware.html",[77,1.993,108,0.479]],["body/injectables/LoggerMiddleware.html",[3,0.301,4,0.26,5,0.221,7,0.435,8,1.094,11,0.034,12,0.83,14,0.713,16,0.422,18,1.947,19,0.537,24,0.301,25,0.079,26,1.797,27,1.645,28,1.195,34,0.021,35,0.021,59,0.852,60,0.65,61,0.435,62,0.713,64,2.87,77,2.539,85,2.619,106,1.623,108,0.61,109,1.016,111,1.094,115,1.11,116,1.11,223,4.146,270,4.742,271,2.047,276,4.525,286,3.312,336,2.363,337,2.87,338,3.985,339,4.987,340,2.842,341,3.985,342,2.842,343,3.985,344,2.842,345,2.842,346,3.985,347,3.985,348,3.985,349,3.985,350,2.842,351,2.842,352,2.842,353,3.985,354,2.842,355,2.842,356,2.842,357,2.842,358,2.842,359,2.842,360,2.842,361,2.842,362,2.842,363,2.842,364,2.363,365,2.842]],["title/classes/LoginDto.html",[25,0.087,152,1.993]],["body/classes/LoginDto.html",[3,0.421,4,0.364,5,0.309,7,0.609,10,2.336,11,0.034,12,1.038,15,1.565,16,0.421,24,0.421,25,0.138,34,0.027,35,0.027,61,0.763,111,1.368,152,3.176,204,2.55,206,2.55,243,2.054,253,4.741,255,4.144,258,2.868,366,3.31,367,3.981,368,3.981,369,3.981]],["title/injectables/TypeOrmConfigService.html",[81,1.993,108,0.479]],["body/injectables/TypeOrmConfigService.html",[3,0.275,4,0.238,5,0.29,7,0.398,8,1.026,10,1.217,11,0.034,12,0.912,14,0.652,16,0.463,17,1.11,18,1.981,19,0.49,20,2.258,21,0.928,24,0.275,25,0.072,26,2.063,27,1.889,28,1.121,31,1.751,32,0.85,34,0.02,35,0.02,61,0.572,67,1.87,74,1.483,81,2.382,90,3.367,91,1.87,97,2.692,101,2.159,106,1.483,108,0.572,109,0.928,111,1.026,115,1.014,116,1.014,119,1.87,204,1.217,264,2.159,337,2.692,364,2.159,370,2.159,371,3.64,372,4.788,373,2.597,374,4.378,375,2.597,376,3.737,377,2.597,378,3.737,379,1.87,380,3.737,381,2.597,382,3.64,383,2.597,384,2.597,385,2.597,386,2.597,387,2.159,388,2.597,389,2.159,390,2.597,391,2.597,392,2.597,393,2.597,394,1.655,395,2.597,396,3.107,397,2.597,398,2.597,399,2.597,400,2.597,401,2.597,402,3.737,403,2.159,404,2.597,405,2.159,406,2.597,407,2.597,408,3.107,409,2.159,410,2.597,411,2.597,412,2.159,413,2.597,414,2.597,415,2.597,416,2.597,417,2.597,418,2.597]],["title/classes/UpdateUserDto.html",[25,0.087,419,1.785]],["body/classes/UpdateUserDto.html",[3,0.466,4,0.402,5,0.342,11,0.033,16,0.561,24,0.466,25,0.122,34,0.028,35,0.028,242,2.269,243,2.269,245,3.169,301,2.512,419,3.026,420,3.658,421,4.4,422,3.658,423,3.658,424,2.512,425,3.169,426,4.4]],["title/entities/User.html",[197,1.613,427,2.252]],["body/entities/User.html",[3,0.232,4,0.2,5,0.17,7,0.335,10,2.544,11,0.035,12,1.131,15,1.622,16,0.419,24,0.232,25,0.092,32,1.298,34,0.018,35,0.018,60,0.501,61,0.86,85,1.026,90,3.526,111,0.905,115,1.722,116,1.548,134,0.936,161,1.544,197,1.7,204,1.857,206,1.857,212,2.374,246,2.855,247,2.855,308,2.1,394,1.395,427,2.374,428,1.82,429,3.295,430,3.295,431,2.526,432,3.295,433,3.295,434,4.41,435,2.19,436,4.41,437,4.41,438,2.19,439,4.41,440,2.19,441,2.19,442,3.295,443,2.19,444,2.19,445,2.19,446,3.964,447,2.19,448,2.19,449,2.19,450,2.19,451,2.19,452,2.19,453,2.19,454,3.296,455,3.296,456,3.296,457,5.158,458,3.296,459,3.296,460,1.25,461,1.577,462,1.82,463,2.19,464,4.41,465,2.19,466,2.19,467,2.19,468,2.19,469,3.296,470,2.19,471,3.296,472,2.19]],["title/controllers/UserController.html",[0,1.465,473,1.993]],["body/controllers/UserController.html",[0,1.106,2,1.106,3,0.25,4,0.216,5,0.183,7,0.361,8,0.957,10,2.288,11,0.034,12,1.017,14,1.225,16,0.559,17,1.009,18,1.362,19,0.446,20,1.771,21,0.844,24,0.25,25,0.066,26,1.619,27,1.482,28,0.708,30,1.106,31,1.106,32,1.599,34,0.019,35,0.019,59,1.373,60,1.048,61,0.701,62,1.149,132,1.963,142,3.446,143,1.963,145,1.963,146,1.701,151,1.963,193,1.943,229,1.963,242,2.636,297,1.505,298,1.701,308,3.531,419,3.099,424,1.991,425,2.511,431,3.257,461,1.701,473,2.222,474,1.963,475,3.806,476,3.487,477,2.899,478,2.899,479,1.963,480,2.361,481,2.361,482,2.361,483,2.361,484,2.361,485,1.963,486,3.487,487,2.361,488,1.963,489,3.487,490,2.361,491,3.487,492,2.361,493,2.361,494,2.361,495,2.361,496,1.963,497,1.963,498,1.963,499,2.361,500,2.361,501,2.361,502,2.361,503,2.361,504,2.361,505,2.361,506,2.361,507,2.361,508,2.361,509,2.361,510,2.361,511,2.361,512,2.361,513,2.361,514,2.361,515,2.361]],["title/modules/UserModule.html",[36,1.221,49,1.613]],["body/modules/UserModule.html",[2,2.162,3,0.373,4,0.323,5,0.274,11,0.034,16,0.599,19,0.666,24,0.373,25,0.098,34,0.025,35,0.025,36,2.008,38,1.82,39,1.82,40,2.249,41,2.249,42,1.82,43,3.276,44,3.276,49,3.05,50,2.94,51,2.249,52,2.249,54,2.542,73,2.934,74,2.015,193,2.907,197,1.82,473,3.276,496,2.934,516,2.934,517,2.934,518,2.934,519,3.529,520,2.934,521,3.529,522,3.529]],["title/injectables/UserService.html",[108,0.479,193,1.465]],["body/injectables/UserService.html",[3,0.21,4,0.182,5,0.154,7,0.304,8,0.84,11,0.034,12,1.072,14,1.201,15,1.025,16,0.528,17,0.849,18,1.638,19,0.375,20,2.13,21,0.71,24,0.21,25,0.055,26,1.769,27,1.619,28,1.12,30,1.434,31,0.931,32,1.567,34,0.016,35,0.016,59,1.435,60,1.095,61,0.732,62,1.201,74,1.134,85,0.931,108,0.468,109,0.71,111,0.84,115,0.776,116,0.776,134,2.517,141,2.164,161,2.242,193,1.434,197,1.926,206,1.749,220,1.651,242,2.337,272,3.487,308,3.366,419,2.939,424,1.747,425,2.204,431,3.177,460,1.134,475,3.487,477,2.544,478,2.544,479,2.544,485,2.544,488,2.544,497,1.651,498,1.651,520,1.651,523,1.651,524,3.06,525,3.06,526,1.986,527,4.194,528,3.06,529,3.06,530,1.986,531,1.986,532,3.06,533,1.986,534,3.06,535,1.986,536,1.986,537,1.986,538,3.06,539,1.986,540,1.986,541,1.986,542,1.986,543,1.986,544,1.986,545,1.986,546,1.986,547,1.986,548,1.986,549,1.986,550,1.986,551,1.986,552,3.06]],["title/classes/Users1694279542731.html",[25,0.087,553,2.252]],["body/classes/Users1694279542731.html",[3,0.265,4,0.229,5,0.194,7,0.383,8,0.999,11,0.033,12,0.893,14,0.913,15,0.687,16,0.265,24,0.265,25,0.069,34,0.02,35,0.02,59,1.091,60,1.144,61,0.656,62,0.913,91,2.62,106,2.077,111,0.999,115,1.674,116,0.977,134,2.229,141,2.428,161,2.205,204,1.173,206,1.705,243,1.291,246,1.802,247,1.802,283,4.749,293,3.025,371,4.337,412,2.08,424,2.077,429,2.08,430,2.08,431,2.999,432,2.08,433,2.08,460,1.429,461,2.62,462,2.08,553,3.39,554,3.913,555,2.08,556,4.287,557,3.638,558,3.025,559,2.502,560,3.638,561,5.624,562,2.502,563,3.638,564,2.502,565,3.638,566,3.39,567,3.638,568,5.384,569,5.384,570,4.287,571,3.638,572,3.638,573,4.287,574,2.502,575,2.502,576,3.638,577,3.638,578,4.287,579,4.287,580,2.08,581,2.502,582,2.502,583,3.638,584,2.502,585,3.638]],["title/coverage.html",[586,3.066]],["body/coverage.html",[0,2.109,1,1.739,5,0.212,6,2.269,11,0.034,22,1.408,25,0.144,28,0.819,34,0.021,35,0.021,36,1.066,42,1.408,53,1.966,61,0.418,77,1.739,79,1.966,81,1.739,86,1.966,108,0.879,110,2.269,130,1.739,131,2.269,147,1.166,149,1.739,152,1.739,167,1.558,168,1.558,188,2.269,193,1.279,197,1.408,200,1.558,242,1.408,244,2.269,245,2.789,259,1.966,260,2.269,261,2.269,297,1.739,298,1.966,299,2.789,303,1.739,305,2.269,309,2.269,326,2.269,328,2.269,336,2.269,366,2.269,370,2.269,419,1.558,420,2.269,427,1.966,428,2.269,473,1.739,474,2.269,523,2.269,553,1.966,554,2.269,555,2.269,566,1.966,580,2.269,586,1.966,587,2.269,588,2.729,589,6.285,590,4.501,591,3.742,592,5.743,593,5.172,594,3.872,595,4.501,596,2.789,597,3.872,598,2.269,599,2.269,600,2.269,601,2.729,602,2.729,603,2.729]],["title/dependencies.html",[39,1.938,604,2.175]],["body/dependencies.html",[11,0.035,19,0.623,21,1.18,25,0.123,34,0.024,35,0.024,39,1.702,66,2.743,67,2.376,68,2.743,72,2.743,74,1.884,75,2.743,146,2.376,173,1.702,175,2.376,180,2.103,212,2.376,258,2.376,271,3.179,317,3.824,332,2.376,422,2.743,423,2.743,442,2.743,460,1.884,605,3.3,606,3.3,607,3.3,608,4.973,609,3.3,610,3.3,611,3.3,612,3.3,613,3.3,614,3.3,615,3.3,616,3.3,617,3.3,618,3.3,619,2.743,620,3.3,621,3.3,622,3.3,623,3.3,624,3.3,625,3.3,626,3.3,627,3.3,628,3.3,629,3.3,630,3.3,631,3.3,632,3.3,633,3.3,634,3.3,635,3.3,636,3.3,637,3.3,638,2.743,639,2.743,640,3.3,641,3.3,642,3.3,643,3.3]],["title/miscellaneous/functions.html",[644,1.668,645,3.124]],["body/miscellaneous/functions.html",[7,0.677,11,0.032,14,1.109,15,1.564,34,0.029,35,0.029,42,2.94,59,1.326,60,1.012,61,0.677,62,1.109,79,3.828,596,3.183,598,3.674,644,2.816,645,3.674,646,3.674,647,4.42,648,4.42,649,4.42]],["title/index.html",[7,0.401,650,2.617,651,2.617]],["body/index.html",[4,0.233,5,0.314,11,0.033,16,0.428,34,0.014,35,0.014,60,0.733,97,2.651,98,2.114,99,2.114,119,2.912,120,1.307,121,2.114,122,2.114,123,1.307,124,1.307,126,1.307,127,3.06,128,1.307,129,3.361,224,1.307,225,1.307,332,1.132,337,1.132,379,1.832,382,1.307,387,3.943,389,1.307,394,1.002,396,2.663,403,4.073,405,1.307,408,1.307,409,2.114,424,2.102,460,1.829,558,3.06,566,1.132,586,1.132,587,2.663,591,1.307,619,1.307,638,1.307,639,2.114,652,1.132,653,1.572,654,4.899,655,1.572,656,1.572,657,1.572,658,1.572,659,4.899,660,4.555,661,2.543,662,2.543,663,3.204,664,2.543,665,4.899,666,3.204,667,2.543,668,4.742,669,2.543,670,1.572,671,1.572,672,1.572,673,1.572,674,1.572,675,1.572,676,3.204,677,3.597,678,1.572,679,1.572,680,3.204,681,1.572,682,1.572,683,1.572,684,1.572,685,1.572,686,1.572,687,2.543,688,2.543,689,1.572,690,1.572,691,1.572,692,1.572,693,1.572,694,1.307,695,1.572,696,2.543,697,1.572,698,1.572,699,1.572,700,3.681,701,1.572,702,1.572,703,3.204,704,1.572,705,1.572,706,1.572,707,3.681,708,1.572,709,1.572,710,1.572,711,1.572,712,3.681,713,1.572,714,2.543,715,1.572,716,1.572,717,2.543,718,1.572,719,1.572,720,1.572,721,1.572,722,1.572,723,1.572,724,1.572,725,1.572,726,1.572,727,1.572,728,1.572,729,1.572,730,1.572,731,2.543,732,1.572,733,2.543,734,1.572,735,1.572,736,2.543,737,1.572,738,1.572,739,1.572,740,1.572,741,1.572,742,1.572,743,1.572,744,1.572,745,1.572,746,1.572,747,1.572,748,2.543,749,1.307,750,1.307,751,1.572,752,1.572,753,2.543,754,1.572,755,1.572,756,1.572,757,2.543,758,1.572,759,3.204,760,1.572,761,1.572,762,4.043,763,1.572,764,1.572,765,1.572,766,1.572,767,1.572,768,1.572,769,1.572,770,3.204,771,1.572,772,1.572,773,1.572,774,1.572,775,1.572,776,1.572,777,1.572,778,1.572,779,1.572,780,1.572,781,1.572,782,1.572,783,1.572,784,1.572,785,1.572,786,1.572,787,1.572,788,1.572,789,1.572,790,1.572,791,1.572,792,1.572,793,1.572,794,1.572,795,1.572,796,1.572,797,1.572,798,1.572,799,1.572,800,2.543,801,1.572,802,1.572,803,1.572,804,1.572,805,2.543,806,1.572,807,1.572,808,1.572,809,1.572,810,1.572,811,1.572,812,1.572,813,1.572,814,3.204,815,1.572,816,2.543,817,1.572,818,1.572,819,1.572,820,1.572,821,1.572,822,1.572,823,1.572,824,1.572,825,1.572,826,1.572,827,1.572,828,2.114,829,2.543,830,2.543,831,1.572,832,1.572,833,1.572,834,1.572,835,1.572,836,1.572,837,1.572,838,1.572,839,1.572,840,1.572,841,1.572,842,1.307]],["title/modules.html",[38,2.196]],["body/modules.html",[11,0.029,34,0.029,35,0.029,37,2.924,38,2.367,48,2.62,49,2.367,750,4.813,828,4.813,843,5.79,844,5.79]],["title/overview.html",[845,3.538]],["body/overview.html",[2,1.573,11,0.033,22,2.588,34,0.024,35,0.024,36,1.311,37,3.78,38,1.732,39,1.732,40,2.139,41,2.139,42,1.732,43,2.139,44,2.139,45,2.791,46,2.791,47,2.791,48,3.516,49,3.013,50,2.845,51,2.139,52,2.139,109,1.2,147,2.496,163,2.791,165,2.791,166,2.791,167,2.864,168,2.864,193,2.737,243,1.732,303,2.139,394,2.139,516,2.791,517,2.791,518,2.791,694,3.712,845,2.791,846,4.465,847,3.357,848,3.357]],["title/properties.html",[111,1.031,604,2.175]],["body/properties.html",[11,0.033,34,0.03,35,0.03,111,1.29,652,3.385,842,3.907,849,4.7,850,4.7,851,4.7,852,4.7]],["title/miscellaneous/variables.html",[644,1.668,853,3.124]],["body/miscellaneous/variables.html",[7,0.529,11,0.034,15,0.948,28,1.036,34,0.024,35,0.024,36,1.776,53,2.487,60,0.79,61,0.779,85,2.384,86,3.276,87,2.871,90,2.201,115,1.776,116,1.776,180,2.899,240,2.871,379,2.487,596,2.487,599,2.871,600,3.782,644,2.201,646,2.871,652,3.276,677,3.782,749,3.782,853,2.871,854,3.453,855,3.453,856,3.453,857,3.453,858,3.453,859,3.453,860,3.453,861,3.453,862,3.453,863,3.453,864,3.453,865,3.453,866,3.453,867,3.453,868,3.453,869,3.453,870,3.453,871,3.453,872,4.549,873,3.453,874,4.549,875,3.453,876,3.453,877,3.453,878,3.453,879,3.453,880,3.453,881,3.453]]],"invertedIndex":[["",{"_index":11,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/CreateUserDto.html":{},"classes/HttpExceptionFilter.html":{},"injectables/JwtAuthGuard.html":{},"interfaces/JwtPayload.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"injectables/LoggerMiddleware.html":{},"classes/LoginDto.html":{},"injectables/TypeOrmConfigService.html":{},"classes/UpdateUserDto.html":{},"entities/User.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"classes/Users1694279542731.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":589,"title":{},"body":{"coverage.html":{}}}],["0.0.1",{"_index":850,"title":{},"body":{"properties.html":{}}}],["0.0.8",{"_index":607,"title":{},"body":{"dependencies.html":{}}}],["0.1.13",{"_index":633,"title":{},"body":{"dependencies.html":{}}}],["0.13.2",{"_index":617,"title":{},"body":{"dependencies.html":{}}}],["0.3.6",{"_index":641,"title":{},"body":{"dependencies.html":{}}}],["0.5.1",{"_index":616,"title":{},"body":{"dependencies.html":{}}}],["0.6.0",{"_index":624,"title":{},"body":{"dependencies.html":{}}}],["0/1",{"_index":592,"title":{},"body":{"coverage.html":{}}}],["0/2",{"_index":590,"title":{},"body":{"coverage.html":{}}}],["0/3",{"_index":595,"title":{},"body":{"coverage.html":{}}}],["0/4",{"_index":593,"title":{},"body":{"coverage.html":{}}}],["0/5",{"_index":601,"title":{},"body":{"coverage.html":{}}}],["0/6",{"_index":594,"title":{},"body":{"coverage.html":{}}}],["0/9",{"_index":602,"title":{},"body":{"coverage.html":{}}}],["1",{"_index":694,"title":{},"body":{"index.html":{},"overview.html":{}}}],["1.0.0",{"_index":626,"title":{},"body":{"dependencies.html":{}}}],["17.6.0",{"_index":623,"title":{},"body":{"dependencies.html":{}}}],["1e",{"_index":362,"title":{},"body":{"injectables/LoggerMiddleware.html":{}}}],["1e3",{"_index":360,"title":{},"body":{"injectables/LoggerMiddleware.html":{}}}],["2.0.0",{"_index":609,"title":{},"body":{"dependencies.html":{}}}],["2.1.10",{"_index":605,"title":{},"body":{"dependencies.html":{}}}],["3",{"_index":846,"title":{},"body":{"overview.html":{}}}],["3.0.2",{"_index":635,"title":{},"body":{"dependencies.html":{}}}],["3.2.1",{"_index":628,"title":{},"body":{"dependencies.html":{}}}],["30",{"_index":414,"title":{},"body":{"injectables/TypeOrmConfigService.html":{}}}],["30000",{"_index":413,"title":{},"body":{"injectables/TypeOrmConfigService.html":{}}}],["4.0.0",{"_index":625,"title":{},"body":{"dependencies.html":{}}}],["4.4.0",{"_index":640,"title":{},"body":{"dependencies.html":{}}}],["5",{"_index":848,"title":{},"body":{"overview.html":{}}}],["5.0.1",{"_index":615,"title":{},"body":{"dependencies.html":{}}}],["5.1.0",{"_index":622,"title":{},"body":{"dependencies.html":{}}}],["5.2.1",{"_index":613,"title":{},"body":{"dependencies.html":{}}}],["5.72.1",{"_index":643,"title":{},"body":{"dependencies.html":{}}}],["5432",{"_index":386,"title":{},"body":{"injectables/TypeOrmConfigService.html":{}}}],["6",{"_index":363,"title":{},"body":{"injectables/LoggerMiddleware.html":{}}}],["7.0.3",{"_index":620,"title":{},"body":{"dependencies.html":{}}}],["7.2.0",{"_index":637,"title":{},"body":{"dependencies.html":{}}}],["8.0.0",{"_index":608,"title":{},"body":{"dependencies.html":{}}}],["8.0.1",{"_index":610,"title":{},"body":{"dependencies.html":{}}}],["8.0.3",{"_index":614,"title":{},"body":{"dependencies.html":{}}}],["8.2.1",{"_index":611,"title":{},"body":{"dependencies.html":{}}}],["8.7.3",{"_index":630,"title":{},"body":{"dependencies.html":{}}}],["9",{"_index":847,"title":{},"body":{"overview.html":{}}}],["abstraction",{"_index":773,"title":{},"body":{"index.html":{}}}],["accesstoken",{"_index":240,"title":{},"body":{"injectables/AuthService.html":{},"miscellaneous/variables.html":{}}}],["addbearerauth",{"_index":863,"title":{},"body":{"miscellaneous/variables.html":{}}}],["agent",{"_index":351,"title":{},"body":{"injectables/LoggerMiddleware.html":{}}}],["algoan/nestjs",{"_index":66,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["allows",{"_index":721,"title":{},"body":{"index.html":{}}}],["along",{"_index":713,"title":{},"body":{"index.html":{}}}],["already",{"_index":698,"title":{},"body":{"index.html":{}}}],["alternative",{"_index":401,"title":{},"body":{"injectables/TypeOrmConfigService.html":{}}}],["amazing",{"_index":834,"title":{},"body":{"index.html":{}}}],["amazon",{"_index":824,"title":{},"body":{"index.html":{}}}],["angular",{"_index":733,"title":{},"body":{"index.html":{}}}],["anyone",{"_index":722,"title":{},"body":{"index.html":{}}}],["api",{"_index":879,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apibearerauth",{"_index":499,"title":{},"body":{"controllers/UserController.html":{}}}],["apibearerauth('accesstoken",{"_index":508,"title":{},"body":{"controllers/UserController.html":{}}}],["apibody",{"_index":144,"title":{},"body":{"controllers/AuthController.html":{}}}],["apitags",{"_index":145,"title":{},"body":{"controllers/AuthController.html":{},"controllers/UserController.html":{}}}],["apitags('authentication",{"_index":154,"title":{},"body":{"controllers/AuthController.html":{}}}],["apitags('users",{"_index":500,"title":{},"body":{"controllers/UserController.html":{}}}],["api’s",{"_index":728,"title":{},"body":{"index.html":{}}}],["app",{"_index":677,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{}}}],["app.controller",{"_index":76,"title":{},"body":{"modules/AppModule.html":{}}}],["app.service",{"_index":23,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{}}}],["app_interceptor",{"_index":71,"title":{},"body":{"modules/AppModule.html":{}}}],["appcontroller",{"_index":1,"title":{"controllers/AppController.html":{}},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"coverage.html":{}}}],["appendhosting",{"_index":797,"title":{},"body":{"index.html":{}}}],["applcation",{"_index":711,"title":{},"body":{"index.html":{}}}],["application",{"_index":379,"title":{},"body":{"injectables/TypeOrmConfigService.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["applications",{"_index":129,"title":{},"body":{"injectables/AppService.html":{},"index.html":{}}}],["appmodule",{"_index":37,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["apps",{"_index":806,"title":{},"body":{"index.html":{}}}],["appservice",{"_index":22,"title":{"injectables/AppService.html":{}},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"coverage.html":{},"overview.html":{}}}],["argumentshost",{"_index":265,"title":{},"body":{"classes/HttpExceptionFilter.html":{}}}],["army",{"_index":765,"title":{},"body":{"index.html":{}}}],["async",{"_index":134,"title":{},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"entities/User.html":{},"injectables/UserService.html":{},"classes/Users1694279542731.html":{}}}],["auth",{"_index":133,"title":{},"body":{"controllers/AuthController.html":{}}}],["auth.controller",{"_index":170,"title":{},"body":{"modules/AuthModule.html":{}}}],["auth.guard",{"_index":151,"title":{},"body":{"controllers/AuthController.html":{},"controllers/UserController.html":{}}}],["auth.guard.ts",{"_index":299,"title":{},"body":{"injectables/JwtAuthGuard.html":{},"injectables/LocalAuthGuard.html":{},"coverage.html":{}}}],["auth.service",{"_index":148,"title":{},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{}}}],["auth/auth.module",{"_index":84,"title":{},"body":{"modules/AppModule.html":{}}}],["authcontroller",{"_index":130,"title":{"controllers/AuthController.html":{}},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{},"coverage.html":{}}}],["authguard",{"_index":300,"title":{},"body":{"injectables/JwtAuthGuard.html":{},"injectables/LocalAuthGuard.html":{}}}],["authguard('jwt",{"_index":302,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["authguard('local",{"_index":327,"title":{},"body":{"injectables/LocalAuthGuard.html":{}}}],["authguard/local",{"_index":150,"title":{},"body":{"controllers/AuthController.html":{}}}],["authmodule",{"_index":48,"title":{"modules/AuthModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules.html":{},"overview.html":{}}}],["author",{"_index":852,"title":{},"body":{"properties.html":{}}}],["authorized",{"_index":234,"title":{},"body":{"injectables/AuthService.html":{}}}],["authservice",{"_index":147,"title":{"injectables/AuthService.html":{}},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"coverage.html":{},"overview.html":{}}}],["autoloadentities",{"_index":392,"title":{},"body":{"injectables/TypeOrmConfigService.html":{}}}],["automanages",{"_index":804,"title":{},"body":{"index.html":{}}}],["automating",{"_index":818,"title":{},"body":{"index.html":{}}}],["await",{"_index":161,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"entities/User.html":{},"injectables/UserService.html":{},"classes/Users1694279542731.html":{}}}],["backers",{"_index":835,"title":{},"body":{"index.html":{}}}],["bcrypt",{"_index":212,"title":{},"body":{"injectables/AuthService.html":{},"entities/User.html":{},"dependencies.html":{}}}],["bcrypt.compare(password",{"_index":219,"title":{},"body":{"injectables/AuthService.html":{}}}],["bcrypt.gensalt",{"_index":470,"title":{},"body":{"entities/User.html":{}}}],["bcrypt.hash(password",{"_index":472,"title":{},"body":{"entities/User.html":{}}}],["bearer",{"_index":866,"title":{},"body":{"miscellaneous/variables.html":{}}}],["bearerformat",{"_index":867,"title":{},"body":{"miscellaneous/variables.html":{}}}],["before",{"_index":675,"title":{},"body":{"index.html":{}}}],["beforeinsert",{"_index":456,"title":{},"body":{"entities/User.html":{}}}],["between",{"_index":779,"title":{},"body":{"index.html":{}}}],["bigint",{"_index":581,"title":{},"body":{"classes/Users1694279542731.html":{}}}],["blue",{"_index":859,"title":{},"body":{"miscellaneous/variables.html":{}}}],["body",{"_index":491,"title":{},"body":{"controllers/UserController.html":{}}}],["bootstrap",{"_index":42,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/UserModule.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"overview.html":{}}}],["browse",{"_index":844,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":750,"title":{},"body":{"index.html":{},"modules.html":{}}}],["build",{"_index":871,"title":{},"body":{"miscellaneous/variables.html":{}}}],["building",{"_index":123,"title":{},"body":{"injectables/AppService.html":{},"index.html":{}}}],["c:\\osgeo4w\\bin>ogr2ogr",{"_index":789,"title":{},"body":{"index.html":{}}}],["cache",{"_index":91,"title":{},"body":{"modules/AppModule.html":{},"injectables/TypeOrmConfigService.html":{},"classes/Users1694279542731.html":{}}}],["catch",{"_index":230,"title":{},"body":{"injectables/AuthService.html":{},"classes/HttpExceptionFilter.html":{}}}],["catch(exception",{"_index":263,"title":{},"body":{"classes/HttpExceptionFilter.html":{}}}],["changes",{"_index":754,"title":{},"body":{"index.html":{}}}],["character",{"_index":568,"title":{},"body":{"classes/Users1694279542731.html":{}}}],["class",{"_index":25,"title":{"classes/CreateUserDto.html":{},"classes/HttpExceptionFilter.html":{},"classes/LoginDto.html":{},"classes/UpdateUserDto.html":{},"classes/Users1694279542731.html":{}},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/CreateUserDto.html":{},"classes/HttpExceptionFilter.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"injectables/LoggerMiddleware.html":{},"classes/LoginDto.html":{},"injectables/TypeOrmConfigService.html":{},"classes/UpdateUserDto.html":{},"entities/User.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"classes/Users1694279542731.html":{},"coverage.html":{},"dependencies.html":{}}}],["classes",{"_index":243,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/HttpExceptionFilter.html":{},"classes/LoginDto.html":{},"classes/UpdateUserDto.html":{},"classes/Users1694279542731.html":{},"overview.html":{}}}],["classserializerinterceptor",{"_index":494,"title":{},"body":{"controllers/UserController.html":{}}}],["cli",{"_index":402,"title":{},"body":{"injectables/TypeOrmConfigService.html":{}}}],["cloud",{"_index":826,"title":{},"body":{"index.html":{}}}],["cluster_appmodule",{"_index":45,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_imports",{"_index":47,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_providers",{"_index":46,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_authmodule",{"_index":163,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_authmodule_exports",{"_index":166,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_authmodule_imports",{"_index":164,"title":{},"body":{"modules/AuthModule.html":{}}}],["cluster_authmodule_providers",{"_index":165,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_usermodule",{"_index":516,"title":{},"body":{"modules/UserModule.html":{},"overview.html":{}}}],["cluster_usermodule_exports",{"_index":517,"title":{},"body":{"modules/UserModule.html":{},"overview.html":{}}}],["cluster_usermodule_providers",{"_index":518,"title":{},"body":{"modules/UserModule.html":{},"overview.html":{}}}],["code",{"_index":737,"title":{},"body":{"index.html":{}}}],["column",{"_index":457,"title":{},"body":{"entities/User.html":{}}}],["column({nullable",{"_index":439,"title":{},"body":{"entities/User.html":{}}}],["column({unique",{"_index":441,"title":{},"body":{"entities/User.html":{}}}],["comes",{"_index":767,"title":{},"body":{"index.html":{}}}],["command",{"_index":405,"title":{},"body":{"injectables/TypeOrmConfigService.html":{},"index.html":{}}}],["common",{"_index":780,"title":{},"body":{"index.html":{}}}],["compodoc",{"_index":731,"title":{},"body":{"index.html":{}}}],["compodoc/compodoc",{"_index":743,"title":{},"body":{"index.html":{}}}],["compose",{"_index":712,"title":{},"body":{"index.html":{}}}],["compose.yml",{"_index":666,"title":{},"body":{"index.html":{}}}],["concat(msg",{"_index":292,"title":{},"body":{"classes/HttpExceptionFilter.html":{}}}],["configmodule",{"_index":70,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{}}}],["configmodule.forroot",{"_index":88,"title":{},"body":{"modules/AppModule.html":{}}}],["configservice",{"_index":20,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"injectables/TypeOrmConfigService.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["configservice.get('jwt_expiration_time",{"_index":187,"title":{},"body":{"modules/AuthModule.html":{}}}],["configservice.get('jwt_secret_key",{"_index":184,"title":{},"body":{"modules/AuthModule.html":{},"injectables/JwtStrategy.html":{}}}],["configuration",{"_index":656,"title":{},"body":{"index.html":{}}}],["configure",{"_index":55,"title":{},"body":{"modules/AppModule.html":{}}}],["configure(consumer",{"_index":56,"title":{},"body":{"modules/AppModule.html":{}}}],["configured",{"_index":699,"title":{},"body":{"index.html":{}}}],["connection",{"_index":692,"title":{},"body":{"index.html":{}}}],["const",{"_index":85,"title":{},"body":{"modules/AppModule.html":{},"injectables/AuthService.html":{},"classes/HttpExceptionFilter.html":{},"injectables/LoggerMiddleware.html":{},"entities/User.html":{},"injectables/UserService.html":{},"miscellaneous/variables.html":{}}}],["constraint",{"_index":573,"title":{},"body":{"classes/Users1694279542731.html":{}}}],["constructor",{"_index":30,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["constructor(authservice",{"_index":310,"title":{},"body":{"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{}}}],["constructor(configservice",{"_index":112,"title":{},"body":{"injectables/AppService.html":{}}}],["constructor(private",{"_index":157,"title":{},"body":{"controllers/AuthController.html":{},"injectables/LocalStrategy.html":{}}}],["constructor(userservice",{"_index":192,"title":{},"body":{"injectables/AuthService.html":{}}}],["constructor(usersrepository",{"_index":526,"title":{},"body":{"injectables/UserService.html":{}}}],["consumer",{"_index":63,"title":{},"body":{"modules/AppModule.html":{}}}],["consumer.apply(loggermiddleware).forroutes",{"_index":107,"title":{},"body":{"modules/AppModule.html":{}}}],["consumers",{"_index":725,"title":{},"body":{"index.html":{}}}],["container",{"_index":823,"title":{},"body":{"index.html":{}}}],["containerized",{"_index":822,"title":{},"body":{"index.html":{}}}],["contentlength",{"_index":353,"title":{},"body":{"injectables/LoggerMiddleware.html":{}}}],["context",{"_index":273,"title":{},"body":{"classes/HttpExceptionFilter.html":{}}}],["context.getrequest",{"_index":277,"title":{},"body":{"classes/HttpExceptionFilter.html":{}}}],["context.getresponse",{"_index":275,"title":{},"body":{"classes/HttpExceptionFilter.html":{}}}],["controller",{"_index":0,"title":{"controllers/AppController.html":{},"controllers/AuthController.html":{},"controllers/UserController.html":{}},"body":{"controllers/AppController.html":{},"controllers/AuthController.html":{},"controllers/UserController.html":{},"coverage.html":{}}}],["controller('auth",{"_index":155,"title":{},"body":{"controllers/AuthController.html":{}}}],["controller('users",{"_index":501,"title":{},"body":{"controllers/UserController.html":{}}}],["controllers",{"_index":2,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"overview.html":{}}}],["conversion",{"_index":768,"title":{},"body":{"index.html":{}}}],["convert",{"_index":778,"title":{},"body":{"index.html":{}}}],["coverage",{"_index":586,"title":{"coverage.html":{}},"body":{"coverage.html":{},"index.html":{}}}],["create",{"_index":424,"title":{},"body":{"classes/UpdateUserDto.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"classes/Users1694279542731.html":{},"index.html":{}}}],["create(@body",{"_index":504,"title":{},"body":{"controllers/UserController.html":{}}}],["create(createuserdto",{"_index":479,"title":{},"body":{"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["createdat",{"_index":429,"title":{},"body":{"entities/User.html":{},"classes/Users1694279542731.html":{}}}],["createdatecolumn",{"_index":458,"title":{},"body":{"entities/User.html":{}}}],["createdatecolumn({type",{"_index":435,"title":{},"body":{"entities/User.html":{}}}],["createdby",{"_index":430,"title":{},"body":{"entities/User.html":{},"classes/Users1694279542731.html":{}}}],["createtypeormoptions",{"_index":372,"title":{},"body":{"injectables/TypeOrmConfigService.html":{}}}],["createuserdto",{"_index":242,"title":{"classes/CreateUserDto.html":{}},"body":{"classes/CreateUserDto.html":{},"classes/UpdateUserDto.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["createuserdto.email",{"_index":542,"title":{},"body":{"injectables/UserService.html":{}}}],["createuserdto.firstname",{"_index":545,"title":{},"body":{"injectables/UserService.html":{}}}],["createuserdto.lastname",{"_index":547,"title":{},"body":{"injectables/UserService.html":{}}}],["createuserdto.password",{"_index":543,"title":{},"body":{"injectables/UserService.html":{}}}],["credentials",{"_index":217,"title":{},"body":{"injectables/AuthService.html":{}}}],["cross",{"_index":618,"title":{},"body":{"dependencies.html":{}}}],["current_timestamp",{"_index":437,"title":{},"body":{"entities/User.html":{}}}],["customoptions",{"_index":874,"title":{},"body":{"miscellaneous/variables.html":{}}}],["customsitetitle",{"_index":878,"title":{},"body":{"miscellaneous/variables.html":{}}}],["d",{"_index":714,"title":{},"body":{"index.html":{}}}],["data",{"_index":770,"title":{},"body":{"index.html":{}}}],["database",{"_index":387,"title":{},"body":{"injectables/TypeOrmConfigService.html":{},"index.html":{}}}],["database_host",{"_index":380,"title":{},"body":{"injectables/TypeOrmConfigService.html":{}}}],["date",{"_index":434,"title":{},"body":{"entities/User.html":{}}}],["date().toisostring",{"_index":294,"title":{},"body":{"classes/HttpExceptionFilter.html":{}}}],["db_changeit",{"_index":680,"title":{},"body":{"index.html":{}}}],["declarations",{"_index":41,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/UserModule.html":{},"overview.html":{}}}],["decorators",{"_index":10,"title":{},"body":{"controllers/AppController.html":{},"controllers/AuthController.html":{},"classes/CreateUserDto.html":{},"classes/LoginDto.html":{},"injectables/TypeOrmConfigService.html":{},"entities/User.html":{},"controllers/UserController.html":{}}}],["default",{"_index":115,"title":{},"body":{"injectables/AppService.html":{},"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"injectables/LoggerMiddleware.html":{},"injectables/TypeOrmConfigService.html":{},"entities/User.html":{},"injectables/UserService.html":{},"classes/Users1694279542731.html":{},"miscellaneous/variables.html":{}}}],["default('development",{"_index":100,"title":{},"body":{"modules/AppModule.html":{}}}],["defaultstrategy",{"_index":179,"title":{},"body":{"modules/AuthModule.html":{}}}],["defined",{"_index":12,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/CreateUserDto.html":{},"classes/HttpExceptionFilter.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"injectables/LoggerMiddleware.html":{},"classes/LoginDto.html":{},"injectables/TypeOrmConfigService.html":{},"entities/User.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"classes/Users1694279542731.html":{}}}],["delete",{"_index":229,"title":{},"body":{"injectables/AuthService.html":{},"controllers/UserController.html":{}}}],["delete(':id",{"_index":486,"title":{},"body":{"controllers/UserController.html":{}}}],["dependencies",{"_index":39,"title":{"dependencies.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/UserModule.html":{},"dependencies.html":{},"overview.html":{}}}],["deploy",{"_index":800,"title":{},"body":{"index.html":{}}}],["deploying",{"_index":812,"title":{},"body":{"index.html":{}}}],["deployment",{"_index":819,"title":{},"body":{"index.html":{}}}],["description",{"_index":652,"title":{},"body":{"index.html":{},"properties.html":{},"miscellaneous/variables.html":{}}}],["dest",{"_index":649,"title":{},"body":{"miscellaneous/functions.html":{}}}],["details",{"_index":674,"title":{},"body":{"index.html":{}}}],["developing",{"_index":709,"title":{},"body":{"index.html":{}}}],["development",{"_index":700,"title":{},"body":{"index.html":{}}}],["diff",{"_index":356,"title":{},"body":{"injectables/LoggerMiddleware.html":{}}}],["diff[0",{"_index":359,"title":{},"body":{"injectables/LoggerMiddleware.html":{}}}],["diff[1",{"_index":361,"title":{},"body":{"injectables/LoggerMiddleware.html":{}}}],["disable",{"_index":222,"title":{},"body":{"injectables/AuthService.html":{}}}],["dist/**/*.entity.{ts,js",{"_index":395,"title":{},"body":{"injectables/TypeOrmConfigService.html":{}}}],["dist/migrations/*.{ts,js",{"_index":397,"title":{},"body":{"injectables/TypeOrmConfigService.html":{}}}],["docker",{"_index":665,"title":{},"body":{"index.html":{}}}],["docs",{"_index":880,"title":{},"body":{"miscellaneous/variables.html":{}}}],["document",{"_index":872,"title":{},"body":{"miscellaneous/variables.html":{}}}],["documentation",{"_index":587,"title":{},"body":{"coverage.html":{},"index.html":{}}}],["documentbuilder",{"_index":857,"title":{},"body":{"miscellaneous/variables.html":{}}}],["down",{"_index":557,"title":{},"body":{"classes/Users1694279542731.html":{}}}],["down(queryrunner",{"_index":560,"title":{},"body":{"classes/Users1694279542731.html":{}}}],["drop",{"_index":681,"title":{},"body":{"index.html":{}}}],["dtest",{"_index":715,"title":{},"body":{"index.html":{}}}],["dto/create",{"_index":497,"title":{},"body":{"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["dto/login.dto",{"_index":153,"title":{},"body":{"controllers/AuthController.html":{}}}],["dto/update",{"_index":498,"title":{},"body":{"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["duration",{"_index":412,"title":{},"body":{"injectables/TypeOrmConfigService.html":{},"classes/Users1694279542731.html":{}}}],["e2e",{"_index":718,"title":{},"body":{"index.html":{}}}],["ease",{"_index":807,"title":{},"body":{"index.html":{}}}],["easy",{"_index":776,"title":{},"body":{"index.html":{}}}],["efficient",{"_index":124,"title":{},"body":{"injectables/AppService.html":{},"index.html":{}}}],["eks",{"_index":825,"title":{},"body":{"index.html":{}}}],["email",{"_index":206,"title":{},"body":{"injectables/AuthService.html":{},"classes/CreateUserDto.html":{},"injectables/LocalStrategy.html":{},"classes/LoginDto.html":{},"entities/User.html":{},"injectables/UserService.html":{},"classes/Users1694279542731.html":{}}}],["encoding",{"_index":684,"title":{},"body":{"index.html":{}}}],["end",{"_index":724,"title":{},"body":{"index.html":{}}}],["english_united",{"_index":687,"title":{},"body":{"index.html":{}}}],["enter",{"_index":868,"title":{},"body":{"miscellaneous/variables.html":{}}}],["entities",{"_index":394,"title":{},"body":{"injectables/TypeOrmConfigService.html":{},"entities/User.html":{},"index.html":{},"overview.html":{}}}],["entities/user.entity",{"_index":520,"title":{},"body":{"modules/UserModule.html":{},"injectables/UserService.html":{}}}],["entitiesdir",{"_index":416,"title":{},"body":{"injectables/TypeOrmConfigService.html":{}}}],["entity",{"_index":427,"title":{"entities/User.html":{}},"body":{"entities/User.html":{},"coverage.html":{}}}],["env",{"_index":619,"title":{},"body":{"dependencies.html":{},"index.html":{}}}],["env.development",{"_index":670,"title":{},"body":{"index.html":{}}}],["env.production",{"_index":672,"title":{},"body":{"index.html":{}}}],["env.sample",{"_index":661,"title":{},"body":{"index.html":{}}}],["env.staging",{"_index":671,"title":{},"body":{"index.html":{}}}],["envfilepath",{"_index":86,"title":{},"body":{"modules/AppModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["environment",{"_index":679,"title":{},"body":{"index.html":{}}}],["err",{"_index":231,"title":{},"body":{"injectables/AuthService.html":{}}}],["error",{"_index":287,"title":{},"body":{"classes/HttpExceptionFilter.html":{}}}],["eslint",{"_index":221,"title":{},"body":{"injectables/AuthService.html":{}}}],["eslint/no",{"_index":226,"title":{},"body":{"injectables/AuthService.html":{}}}],["exception",{"_index":267,"title":{},"body":{"classes/HttpExceptionFilter.html":{}}}],["exception.filter.ts",{"_index":261,"title":{},"body":{"classes/HttpExceptionFilter.html":{},"coverage.html":{}}}],["exception.filter.ts:12",{"_index":266,"title":{},"body":{"classes/HttpExceptionFilter.html":{}}}],["exception.getresponse",{"_index":285,"title":{},"body":{"classes/HttpExceptionFilter.html":{}}}],["exception.getstatus",{"_index":280,"title":{},"body":{"classes/HttpExceptionFilter.html":{}}}],["exceptionfilter",{"_index":262,"title":{},"body":{"classes/HttpExceptionFilter.html":{}}}],["exclude",{"_index":454,"title":{},"body":{"entities/User.html":{}}}],["exclude()@column",{"_index":449,"title":{},"body":{"entities/User.html":{}}}],["execute",{"_index":755,"title":{},"body":{"index.html":{}}}],["exists",{"_index":682,"title":{},"body":{"index.html":{}}}],["exp",{"_index":306,"title":{},"body":{"interfaces/JwtPayload.html":{}}}],["expiresin",{"_index":186,"title":{},"body":{"modules/AuthModule.html":{},"injectables/AuthService.html":{}}}],["export",{"_index":24,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/CreateUserDto.html":{},"classes/HttpExceptionFilter.html":{},"injectables/JwtAuthGuard.html":{},"interfaces/JwtPayload.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"injectables/LoggerMiddleware.html":{},"classes/LoginDto.html":{},"injectables/TypeOrmConfigService.html":{},"classes/UpdateUserDto.html":{},"entities/User.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"classes/Users1694279542731.html":{}}}],["exports",{"_index":44,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/UserModule.html":{},"overview.html":{}}}],["expose",{"_index":455,"title":{},"body":{"entities/User.html":{}}}],["express",{"_index":271,"title":{},"body":{"classes/HttpExceptionFilter.html":{},"injectables/LoggerMiddleware.html":{},"dependencies.html":{}}}],["extends",{"_index":301,"title":{},"body":{"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"classes/UpdateUserDto.html":{}}}],["extractjwt",{"_index":315,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["extractjwt.fromauthheaderasbearertoken",{"_index":323,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["f",{"_index":790,"title":{},"body":{"index.html":{}}}],["false",{"_index":408,"title":{},"body":{"injectables/TypeOrmConfigService.html":{},"index.html":{}}}],["file",{"_index":5,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/CreateUserDto.html":{},"classes/HttpExceptionFilter.html":{},"injectables/JwtAuthGuard.html":{},"interfaces/JwtPayload.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"injectables/LoggerMiddleware.html":{},"classes/LoginDto.html":{},"injectables/TypeOrmConfigService.html":{},"classes/UpdateUserDto.html":{},"entities/User.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"classes/Users1694279542731.html":{},"coverage.html":{},"index.html":{}}}],["findall",{"_index":475,"title":{},"body":{"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["findone",{"_index":476,"title":{},"body":{"controllers/UserController.html":{}}}],["findone(@param('id",{"_index":510,"title":{},"body":{"controllers/UserController.html":{}}}],["findone(id",{"_index":482,"title":{},"body":{"controllers/UserController.html":{}}}],["finduserbyemail",{"_index":524,"title":{},"body":{"injectables/UserService.html":{}}}],["finduserbyemail(email",{"_index":532,"title":{},"body":{"injectables/UserService.html":{}}}],["finduserbyid",{"_index":525,"title":{},"body":{"injectables/UserService.html":{}}}],["finduserbyid(id",{"_index":534,"title":{},"body":{"injectables/UserService.html":{}}}],["firstname",{"_index":246,"title":{},"body":{"classes/CreateUserDto.html":{},"entities/User.html":{},"classes/Users1694279542731.html":{}}}],["folder",{"_index":658,"title":{},"body":{"index.html":{}}}],["formats",{"_index":782,"title":{},"body":{"index.html":{}}}],["framework",{"_index":122,"title":{},"body":{"injectables/AppService.html":{},"index.html":{}}}],["fullname",{"_index":465,"title":{},"body":{"entities/User.html":{}}}],["function",{"_index":597,"title":{},"body":{"coverage.html":{}}}],["functions",{"_index":645,"title":{"miscellaneous/functions.html":{}},"body":{"miscellaneous/functions.html":{}}}],["gdal",{"_index":787,"title":{},"body":{"index.html":{}}}],["generate",{"_index":757,"title":{},"body":{"index.html":{}}}],["generatetoken",{"_index":189,"title":{},"body":{"injectables/AuthService.html":{}}}],["generatetoken(user",{"_index":196,"title":{},"body":{"injectables/AuthService.html":{}}}],["generation",{"_index":741,"title":{},"body":{"index.html":{}}}],["geojson",{"_index":762,"title":{},"body":{"index.html":{}}}],["geospatial",{"_index":772,"title":{},"body":{"index.html":{}}}],["get(':id",{"_index":509,"title":{},"body":{"controllers/UserController.html":{}}}],["getenvpath",{"_index":79,"title":{},"body":{"modules/AppModule.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["getenvpath(`${__dirname}/shared/config/env",{"_index":87,"title":{},"body":{"modules/AppModule.html":{},"miscellaneous/variables.html":{}}}],["getenvpath(dest",{"_index":648,"title":{},"body":{"miscellaneous/functions.html":{}}}],["gethello",{"_index":9,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{}}}],["getting",{"_index":650,"title":{"index.html":{}},"body":{}}],["gis",{"_index":769,"title":{},"body":{"index.html":{}}}],["grow",{"_index":831,"title":{},"body":{"index.html":{}}}],["header",{"_index":870,"title":{},"body":{"miscellaneous/variables.html":{}}}],["hello",{"_index":118,"title":{},"body":{"injectables/AppService.html":{}}}],["helmet",{"_index":621,"title":{},"body":{"dependencies.html":{}}}],["here",{"_index":839,"title":{},"body":{"index.html":{}}}],["host",{"_index":264,"title":{},"body":{"classes/HttpExceptionFilter.html":{},"injectables/TypeOrmConfigService.html":{}}}],["host.switchtohttp",{"_index":274,"title":{},"body":{"classes/HttpExceptionFilter.html":{}}}],["http",{"_index":864,"title":{},"body":{"miscellaneous/variables.html":{}}}],["http://localhost:3000/docsproject",{"_index":730,"title":{},"body":{"index.html":{}}}],["http://localhost:8080",{"_index":752,"title":{},"body":{"index.html":{}}}],["httpexception",{"_index":268,"title":{},"body":{"classes/HttpExceptionFilter.html":{}}}],["httpexceptionfilter",{"_index":259,"title":{"classes/HttpExceptionFilter.html":{}},"body":{"classes/HttpExceptionFilter.html":{},"coverage.html":{}}}],["https://nestjs.com",{"_index":841,"title":{},"body":{"index.html":{}}}],["httpstatus",{"_index":269,"title":{},"body":{"classes/HttpExceptionFilter.html":{}}}],["httpstatus.internal_server_error",{"_index":281,"title":{},"body":{"classes/HttpExceptionFilter.html":{}}}],["i.e",{"_index":696,"title":{},"body":{"index.html":{}}}],["iat",{"_index":307,"title":{},"body":{"interfaces/JwtPayload.html":{}}}],["id",{"_index":431,"title":{},"body":{"entities/User.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"classes/Users1694279542731.html":{}}}],["identifier",{"_index":580,"title":{},"body":{"classes/Users1694279542731.html":{},"coverage.html":{}}}],["ignoreerrors",{"_index":411,"title":{},"body":{"injectables/TypeOrmConfigService.html":{}}}],["implements",{"_index":106,"title":{},"body":{"modules/AppModule.html":{},"classes/HttpExceptionFilter.html":{},"injectables/LoggerMiddleware.html":{},"injectables/TypeOrmConfigService.html":{},"classes/Users1694279542731.html":{}}}],["import",{"_index":16,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/CreateUserDto.html":{},"classes/HttpExceptionFilter.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"injectables/LoggerMiddleware.html":{},"classes/LoginDto.html":{},"injectables/TypeOrmConfigService.html":{},"classes/UpdateUserDto.html":{},"entities/User.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"classes/Users1694279542731.html":{},"index.html":{}}}],["imports",{"_index":54,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/UserModule.html":{}}}],["improves",{"_index":808,"title":{},"body":{"index.html":{}}}],["index",{"_index":7,"title":{"index.html":{}},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/CreateUserDto.html":{},"classes/HttpExceptionFilter.html":{},"interfaces/JwtPayload.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"injectables/LoggerMiddleware.html":{},"classes/LoginDto.html":{},"injectables/TypeOrmConfigService.html":{},"entities/User.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"classes/Users1694279542731.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["inestapplication",{"_index":856,"title":{},"body":{"miscellaneous/variables.html":{}}}],["info",{"_index":3,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/CreateUserDto.html":{},"classes/HttpExceptionFilter.html":{},"injectables/JwtAuthGuard.html":{},"interfaces/JwtPayload.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"injectables/LoggerMiddleware.html":{},"classes/LoginDto.html":{},"injectables/TypeOrmConfigService.html":{},"classes/UpdateUserDto.html":{},"entities/User.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"classes/Users1694279542731.html":{}}}],["inject",{"_index":17,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"injectables/TypeOrmConfigService.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["inject(configservice",{"_index":31,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"injectables/TypeOrmConfigService.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["injectable",{"_index":108,"title":{"injectables/AppService.html":{},"injectables/AuthService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"injectables/LoggerMiddleware.html":{},"injectables/TypeOrmConfigService.html":{},"injectables/UserService.html":{}},"body":{"injectables/AppService.html":{},"injectables/AuthService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"injectables/LoggerMiddleware.html":{},"injectables/TypeOrmConfigService.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["injectables",{"_index":109,"title":{},"body":{"injectables/AppService.html":{},"injectables/AuthService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"injectables/LoggerMiddleware.html":{},"injectables/TypeOrmConfigService.html":{},"injectables/UserService.html":{},"overview.html":{}}}],["injectrepository",{"_index":539,"title":{},"body":{"injectables/UserService.html":{}}}],["injectrepository(user",{"_index":540,"title":{},"body":{"injectables/UserService.html":{}}}],["install",{"_index":785,"title":{},"body":{"index.html":{}}}],["installation",{"_index":653,"title":{},"body":{"index.html":{}}}],["installenvironment",{"_index":655,"title":{},"body":{"index.html":{}}}],["installion",{"_index":788,"title":{},"body":{"index.html":{}}}],["instanceof",{"_index":279,"title":{},"body":{"classes/HttpExceptionFilter.html":{}}}],["integer",{"_index":582,"title":{},"body":{"classes/Users1694279542731.html":{}}}],["interact",{"_index":727,"title":{},"body":{"index.html":{}}}],["interceptor",{"_index":68,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["interface",{"_index":303,"title":{"interfaces/JwtPayload.html":{}},"body":{"interfaces/JwtPayload.html":{},"coverage.html":{},"overview.html":{}}}],["interfaces",{"_index":304,"title":{},"body":{"interfaces/JwtPayload.html":{}}}],["ip",{"_index":346,"title":{},"body":{"injectables/LoggerMiddleware.html":{}}}],["is_template",{"_index":695,"title":{},"body":{"index.html":{}}}],["isemail",{"_index":255,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/LoginDto.html":{}}}],["isemail()@isnotempty",{"_index":248,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["isglobal",{"_index":89,"title":{},"body":{"modules/AppModule.html":{}}}],["isnotempty",{"_index":253,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/LoginDto.html":{}}}],["isnotempty()@isemail",{"_index":367,"title":{},"body":{"classes/LoginDto.html":{}}}],["isoptional",{"_index":256,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["isoptional()@isstring",{"_index":250,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["isstring",{"_index":257,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["joi",{"_index":75,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["joi.number().default(3000",{"_index":102,"title":{},"body":{"modules/AppModule.html":{}}}],["joi.object",{"_index":93,"title":{},"body":{"modules/AppModule.html":{}}}],["joi.string",{"_index":95,"title":{},"body":{"modules/AppModule.html":{}}}],["join",{"_index":837,"title":{},"body":{"index.html":{}}}],["json.stringify(exception",{"_index":290,"title":{},"body":{"classes/HttpExceptionFilter.html":{}}}],["jwt",{"_index":180,"title":{},"body":{"modules/AuthModule.html":{},"injectables/JwtStrategy.html":{},"dependencies.html":{},"miscellaneous/variables.html":{}}}],["jwt.payload",{"_index":319,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["jwtauthguard",{"_index":297,"title":{"injectables/JwtAuthGuard.html":{}},"body":{"injectables/JwtAuthGuard.html":{},"controllers/UserController.html":{},"coverage.html":{}}}],["jwtfromrequest",{"_index":322,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["jwtmodule",{"_index":174,"title":{},"body":{"modules/AuthModule.html":{}}}],["jwtmodule.registerasync",{"_index":181,"title":{},"body":{"modules/AuthModule.html":{}}}],["jwtpayload",{"_index":200,"title":{"interfaces/JwtPayload.html":{}},"body":{"injectables/AuthService.html":{},"interfaces/JwtPayload.html":{},"injectables/JwtStrategy.html":{},"coverage.html":{}}}],["jwtservice",{"_index":194,"title":{},"body":{"injectables/AuthService.html":{}}}],["jwtstrategy",{"_index":167,"title":{"injectables/JwtStrategy.html":{}},"body":{"modules/AuthModule.html":{},"injectables/JwtStrategy.html":{},"coverage.html":{},"overview.html":{}}}],["k8s",{"_index":816,"title":{},"body":{"index.html":{}}}],["keepconnectionalive",{"_index":393,"title":{},"body":{"injectables/TypeOrmConfigService.html":{}}}],["key",{"_index":577,"title":{},"body":{"classes/Users1694279542731.html":{}}}],["knife",{"_index":766,"title":{},"body":{"index.html":{}}}],["known",{"_index":815,"title":{},"body":{"index.html":{}}}],["kubernetes",{"_index":814,"title":{},"body":{"index.html":{}}}],["lastname",{"_index":247,"title":{},"body":{"classes/CreateUserDto.html":{},"entities/User.html":{},"classes/Users1694279542731.html":{}}}],["lc_collate",{"_index":686,"title":{},"body":{"index.html":{}}}],["lc_ctype",{"_index":689,"title":{},"body":{"index.html":{}}}],["legend",{"_index":40,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/UserModule.html":{},"overview.html":{}}}],["length",{"_index":355,"title":{},"body":{"injectables/LoggerMiddleware.html":{}}}],["library",{"_index":774,"title":{},"body":{"index.html":{}}}],["license",{"_index":842,"title":{},"body":{"index.html":{},"properties.html":{}}}],["licensed",{"_index":830,"title":{},"body":{"index.html":{}}}],["limit",{"_index":693,"title":{},"body":{"index.html":{}}}],["line",{"_index":224,"title":{},"body":{"injectables/AuthService.html":{},"index.html":{}}}],["links",{"_index":786,"title":{},"body":{"index.html":{}}}],["linux/unix",{"_index":813,"title":{},"body":{"index.html":{}}}],["local",{"_index":332,"title":{},"body":{"injectables/LocalStrategy.html":{},"dependencies.html":{},"index.html":{}}}],["localauthguard",{"_index":149,"title":{"injectables/LocalAuthGuard.html":{}},"body":{"controllers/AuthController.html":{},"injectables/LocalAuthGuard.html":{},"coverage.html":{}}}],["localhost",{"_index":384,"title":{},"body":{"injectables/TypeOrmConfigService.html":{}}}],["localstrategy",{"_index":168,"title":{"injectables/LocalStrategy.html":{}},"body":{"modules/AuthModule.html":{},"injectables/LocalStrategy.html":{},"coverage.html":{},"overview.html":{}}}],["location",{"_index":663,"title":{},"body":{"index.html":{}}}],["logger",{"_index":18,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"injectables/LoggerMiddleware.html":{},"injectables/TypeOrmConfigService.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["logger(appcontroller.name",{"_index":29,"title":{},"body":{"controllers/AppController.html":{}}}],["logger(appservice.name",{"_index":117,"title":{},"body":{"injectables/AppService.html":{}}}],["logger(authcontroller.name",{"_index":156,"title":{},"body":{"controllers/AuthController.html":{}}}],["logger(authservice.name",{"_index":207,"title":{},"body":{"injectables/AuthService.html":{}}}],["logger(jwtstrategy.name",{"_index":313,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["logger(loggermiddleware.name",{"_index":341,"title":{},"body":{"injectables/LoggerMiddleware.html":{}}}],["logger(typeormconfigservice.name",{"_index":376,"title":{},"body":{"injectables/TypeOrmConfigService.html":{}}}],["logger(usercontroller.name",{"_index":503,"title":{},"body":{"controllers/UserController.html":{}}}],["logger(userservice.name",{"_index":538,"title":{},"body":{"injectables/UserService.html":{}}}],["loggermiddleware",{"_index":77,"title":{"injectables/LoggerMiddleware.html":{}},"body":{"modules/AppModule.html":{},"injectables/LoggerMiddleware.html":{},"coverage.html":{}}}],["logging",{"_index":67,"title":{},"body":{"modules/AppModule.html":{},"injectables/TypeOrmConfigService.html":{},"dependencies.html":{}}}],["logginginterceptor",{"_index":65,"title":{},"body":{"modules/AppModule.html":{}}}],["login",{"_index":135,"title":{},"body":{"controllers/AuthController.html":{}}}],["login(@req",{"_index":160,"title":{},"body":{"controllers/AuthController.html":{}}}],["login(req",{"_index":136,"title":{},"body":{"controllers/AuthController.html":{}}}],["logindto",{"_index":152,"title":{"classes/LoginDto.html":{}},"body":{"controllers/AuthController.html":{},"classes/LoginDto.html":{},"coverage.html":{}}}],["logindto})@post('/login",{"_index":138,"title":{},"body":{"controllers/AuthController.html":{}}}],["management",{"_index":821,"title":{},"body":{"index.html":{}}}],["match",{"_index":218,"title":{},"body":{"injectables/AuthService.html":{}}}],["matching",{"_index":35,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/CreateUserDto.html":{},"classes/HttpExceptionFilter.html":{},"injectables/JwtAuthGuard.html":{},"interfaces/JwtPayload.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"injectables/LoggerMiddleware.html":{},"classes/LoginDto.html":{},"injectables/TypeOrmConfigService.html":{},"classes/UpdateUserDto.html":{},"entities/User.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"classes/Users1694279542731.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/variables.html":{}}}],["mentioned",{"_index":678,"title":{},"body":{"index.html":{}}}],["message",{"_index":288,"title":{},"body":{"classes/HttpExceptionFilter.html":{}}}],["metadata",{"_index":632,"title":{},"body":{"dependencies.html":{}}}],["method",{"_index":347,"title":{},"body":{"injectables/LoggerMiddleware.html":{}}}],["methods",{"_index":8,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/HttpExceptionFilter.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"injectables/LoggerMiddleware.html":{},"injectables/TypeOrmConfigService.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"classes/Users1694279542731.html":{}}}],["middleware/logger.middleware",{"_index":78,"title":{},"body":{"modules/AppModule.html":{}}}],["middlewareconsumer",{"_index":57,"title":{},"body":{"modules/AppModule.html":{}}}],["migration",{"_index":758,"title":{},"body":{"index.html":{}}}],["migration:generate",{"_index":756,"title":{},"body":{"index.html":{}}}],["migration:run",{"_index":404,"title":{},"body":{"injectables/TypeOrmConfigService.html":{}}}],["migrationinterface",{"_index":556,"title":{},"body":{"classes/Users1694279542731.html":{}}}],["migrations",{"_index":396,"title":{},"body":{"injectables/TypeOrmConfigService.html":{},"index.html":{}}}],["migrationsdir",{"_index":418,"title":{},"body":{"injectables/TypeOrmConfigService.html":{}}}],["migrationsrun",{"_index":400,"title":{},"body":{"injectables/TypeOrmConfigService.html":{}}}],["migrationstablename",{"_index":398,"title":{},"body":{"injectables/TypeOrmConfigService.html":{}}}],["miscellaneous",{"_index":644,"title":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["mit",{"_index":829,"title":{},"body":{"index.html":{}}}],["mode",{"_index":703,"title":{},"body":{"index.html":{}}}],["module",{"_index":36,"title":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/UserModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/UserModule.html":{},"coverage.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["modules",{"_index":38,"title":{"modules.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/UserModule.html":{},"modules.html":{},"overview.html":{}}}],["more",{"_index":748,"title":{},"body":{"index.html":{}}}],["msg",{"_index":282,"title":{},"body":{"classes/HttpExceptionFilter.html":{}}}],["name",{"_index":60,"title":{},"body":{"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/HttpExceptionFilter.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"injectables/LoggerMiddleware.html":{},"entities/User.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"classes/Users1694279542731.html":{},"miscellaneous/functions.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["navigate",{"_index":751,"title":{},"body":{"index.html":{}}}],["nest",{"_index":119,"title":{},"body":{"injectables/AppService.html":{},"injectables/TypeOrmConfigService.html":{},"index.html":{}}}],["nestjs/axios",{"_index":606,"title":{},"body":{"dependencies.html":{}}}],["nestjs/common",{"_index":19,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/HttpExceptionFilter.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"injectables/LoggerMiddleware.html":{},"injectables/TypeOrmConfigService.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"dependencies.html":{}}}],["nestjs/config",{"_index":21,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"injectables/TypeOrmConfigService.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"dependencies.html":{}}}],["nestjs/core",{"_index":72,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["nestjs/jwt",{"_index":175,"title":{},"body":{"modules/AuthModule.html":{},"injectables/AuthService.html":{},"dependencies.html":{}}}],["nestjs/mapped",{"_index":422,"title":{},"body":{"classes/UpdateUserDto.html":{},"dependencies.html":{}}}],["nestjs/passport",{"_index":173,"title":{},"body":{"modules/AuthModule.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"dependencies.html":{}}}],["nestjs/platform",{"_index":612,"title":{},"body":{"dependencies.html":{}}}],["nestjs/swagger",{"_index":146,"title":{},"body":{"controllers/AuthController.html":{},"controllers/UserController.html":{},"dependencies.html":{}}}],["nestjs/typeorm",{"_index":74,"title":{},"body":{"modules/AppModule.html":{},"injectables/TypeOrmConfigService.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"dependencies.html":{}}}],["nestmiddleware",{"_index":343,"title":{},"body":{"injectables/LoggerMiddleware.html":{}}}],["nestmodule",{"_index":69,"title":{},"body":{"modules/AppModule.html":{}}}],["never",{"_index":410,"title":{},"body":{"injectables/TypeOrmConfigService.html":{}}}],["new",{"_index":28,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/HttpExceptionFilter.html":{},"injectables/JwtStrategy.html":{},"injectables/LoggerMiddleware.html":{},"injectables/TypeOrmConfigService.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["next",{"_index":223,"title":{},"body":{"injectables/AuthService.html":{},"injectables/LoggerMiddleware.html":{}}}],["nextfunction",{"_index":339,"title":{},"body":{"injectables/LoggerMiddleware.html":{}}}],["nln",{"_index":796,"title":{},"body":{"index.html":{}}}],["node.js",{"_index":121,"title":{},"body":{"injectables/AppService.html":{},"index.html":{}}}],["node_env",{"_index":94,"title":{},"body":{"modules/AppModule.html":{}}}],["now",{"_index":572,"title":{},"body":{"classes/Users1694279542731.html":{}}}],["npm",{"_index":654,"title":{},"body":{"index.html":{}}}],["npx",{"_index":742,"title":{},"body":{"index.html":{}}}],["null",{"_index":283,"title":{},"body":{"classes/HttpExceptionFilter.html":{},"classes/Users1694279542731.html":{}}}],["nullable",{"_index":464,"title":{},"body":{"entities/User.html":{}}}],["number",{"_index":308,"title":{},"body":{"interfaces/JwtPayload.html":{},"entities/User.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["official",{"_index":747,"title":{},"body":{"index.html":{}}}],["ogr2ogr",{"_index":763,"title":{},"body":{"index.html":{}}}],["one",{"_index":409,"title":{},"body":{"injectables/TypeOrmConfigService.html":{},"index.html":{}}}],["open",{"_index":707,"title":{},"body":{"index.html":{}}}],["operation",{"_index":236,"title":{},"body":{"injectables/AuthService.html":{}}}],["optional",{"_index":62,"title":{},"body":{"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/CreateUserDto.html":{},"classes/HttpExceptionFilter.html":{},"interfaces/JwtPayload.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"injectables/LoggerMiddleware.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"classes/Users1694279542731.html":{},"miscellaneous/functions.html":{}}}],["options",{"_index":749,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{}}}],["originalurl",{"_index":348,"title":{},"body":{"injectables/LoggerMiddleware.html":{}}}],["others",{"_index":784,"title":{},"body":{"index.html":{}}}],["out",{"_index":52,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/UserModule.html":{},"overview.html":{}}}],["overview",{"_index":845,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["owner",{"_index":683,"title":{},"body":{"index.html":{}}}],["p",{"_index":744,"title":{},"body":{"index.html":{}}}],["package",{"_index":604,"title":{"dependencies.html":{},"properties.html":{}},"body":{}}],["param",{"_index":493,"title":{},"body":{"controllers/UserController.html":{}}}],["parameters",{"_index":59,"title":{},"body":{"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/HttpExceptionFilter.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"injectables/LoggerMiddleware.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"classes/Users1694279542731.html":{},"miscellaneous/functions.html":{}}}],["part",{"_index":771,"title":{},"body":{"index.html":{}}}],["partialtype",{"_index":421,"title":{},"body":{"classes/UpdateUserDto.html":{}}}],["partialtype(createuserdto",{"_index":426,"title":{},"body":{"classes/UpdateUserDto.html":{}}}],["passenger",{"_index":802,"title":{},"body":{"index.html":{}}}],["passport",{"_index":317,"title":{},"body":{"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"dependencies.html":{}}}],["passportmodule",{"_index":172,"title":{},"body":{"modules/AuthModule.html":{}}}],["passportmodule.register",{"_index":178,"title":{},"body":{"modules/AuthModule.html":{}}}],["passportstrategy",{"_index":314,"title":{},"body":{"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{}}}],["passportstrategy(strategy",{"_index":320,"title":{},"body":{"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{}}}],["password",{"_index":204,"title":{},"body":{"injectables/AuthService.html":{},"classes/CreateUserDto.html":{},"injectables/LocalStrategy.html":{},"classes/LoginDto.html":{},"injectables/TypeOrmConfigService.html":{},"entities/User.html":{},"classes/Users1694279542731.html":{}}}],["password=mypassword",{"_index":794,"title":{},"body":{"index.html":{}}}],["passwordfield",{"_index":334,"title":{},"body":{"injectables/LocalStrategy.html":{}}}],["patch",{"_index":492,"title":{},"body":{"controllers/UserController.html":{}}}],["patch(':id",{"_index":489,"title":{},"body":{"controllers/UserController.html":{}}}],["path",{"_index":295,"title":{},"body":{"classes/HttpExceptionFilter.html":{}}}],["path/to/jour/geojson/file",{"_index":795,"title":{},"body":{"index.html":{}}}],["payload",{"_index":202,"title":{},"body":{"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{}}}],["perform",{"_index":235,"title":{},"body":{"injectables/AuthService.html":{}}}],["persistauthorization",{"_index":877,"title":{},"body":{"miscellaneous/variables.html":{}}}],["pg",{"_index":629,"title":{},"body":{"dependencies.html":{}}}],["pg:\"dbname=your",{"_index":792,"title":{},"body":{"index.html":{}}}],["pg_default",{"_index":691,"title":{},"body":{"index.html":{}}}],["pgadmin",{"_index":669,"title":{},"body":{"index.html":{}}}],["phusionpassenger",{"_index":801,"title":{},"body":{"index.html":{}}}],["pk_6a98f758d8bfd010e7e10ffd3d3",{"_index":584,"title":{},"body":{"classes/Users1694279542731.html":{}}}],["pk_a3ffb1c0c8416b9fc6f907b7433",{"_index":575,"title":{},"body":{"classes/Users1694279542731.html":{}}}],["platform",{"_index":708,"title":{},"body":{"index.html":{}}}],["please",{"_index":659,"title":{},"body":{"index.html":{}}}],["port",{"_index":101,"title":{},"body":{"modules/AppModule.html":{},"injectables/TypeOrmConfigService.html":{}}}],["post",{"_index":142,"title":{},"body":{"controllers/AuthController.html":{},"controllers/UserController.html":{}}}],["post('/login",{"_index":159,"title":{},"body":{"controllers/AuthController.html":{}}}],["postgis",{"_index":668,"title":{},"body":{"index.html":{}}}],["postgres",{"_index":382,"title":{},"body":{"injectables/TypeOrmConfigService.html":{},"index.html":{}}}],["postgresql",{"_index":791,"title":{},"body":{"index.html":{}}}],["prefix",{"_index":132,"title":{},"body":{"controllers/AuthController.html":{},"controllers/UserController.html":{}}}],["primary",{"_index":576,"title":{},"body":{"classes/Users1694279542731.html":{}}}],["primarygeneratedcolumn",{"_index":446,"title":{},"body":{"entities/User.html":{}}}],["private",{"_index":26,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"injectables/LoggerMiddleware.html":{},"injectables/TypeOrmConfigService.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["process.hrtime",{"_index":345,"title":{},"body":{"injectables/LoggerMiddleware.html":{}}}],["process.hrtime(startat",{"_index":357,"title":{},"body":{"injectables/LoggerMiddleware.html":{}}}],["production",{"_index":97,"title":{},"body":{"modules/AppModule.html":{},"injectables/TypeOrmConfigService.html":{},"index.html":{}}}],["progressive",{"_index":120,"title":{},"body":{"injectables/AppService.html":{},"index.html":{}}}],["project",{"_index":736,"title":{},"body":{"index.html":{}}}],["promise",{"_index":141,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"injectables/UserService.html":{},"classes/Users1694279542731.html":{}}}],["properties",{"_index":111,"title":{"properties.html":{}},"body":{"injectables/AppService.html":{},"injectables/AuthService.html":{},"classes/CreateUserDto.html":{},"interfaces/JwtPayload.html":{},"injectables/JwtStrategy.html":{},"injectables/LoggerMiddleware.html":{},"classes/LoginDto.html":{},"injectables/TypeOrmConfigService.html":{},"entities/User.html":{},"injectables/UserService.html":{},"classes/Users1694279542731.html":{},"properties.html":{}}}],["provide",{"_index":105,"title":{},"body":{"modules/AppModule.html":{}}}],["provider",{"_index":827,"title":{},"body":{"index.html":{}}}],["providers",{"_index":43,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/UserModule.html":{},"overview.html":{}}}],["provides",{"_index":775,"title":{},"body":{"index.html":{}}}],["public",{"_index":371,"title":{},"body":{"injectables/TypeOrmConfigService.html":{},"classes/Users1694279542731.html":{}}}],["query",{"_index":578,"title":{},"body":{"classes/Users1694279542731.html":{}}}],["queryrunner",{"_index":561,"title":{},"body":{"classes/Users1694279542731.html":{}}}],["queryrunner.query",{"_index":565,"title":{},"body":{"classes/Users1694279542731.html":{}}}],["queryrunner.query(`drop",{"_index":585,"title":{},"body":{"classes/Users1694279542731.html":{}}}],["read",{"_index":838,"title":{},"body":{"index.html":{}}}],["readonly",{"_index":27,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"injectables/LoggerMiddleware.html":{},"injectables/TypeOrmConfigService.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["record",{"_index":289,"title":{},"body":{"classes/HttpExceptionFilter.html":{}}}],["refer",{"_index":660,"title":{},"body":{"index.html":{}}}],["reflect",{"_index":631,"title":{},"body":{"dependencies.html":{}}}],["reliability",{"_index":810,"title":{},"body":{"index.html":{}}}],["reliable",{"_index":125,"title":{},"body":{"injectables/AppService.html":{}}}],["remove",{"_index":477,"title":{},"body":{"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["remove(@param('id",{"_index":514,"title":{},"body":{"controllers/UserController.html":{}}}],["remove(id",{"_index":485,"title":{},"body":{"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["repository",{"_index":527,"title":{},"body":{"injectables/UserService.html":{}}}],["req",{"_index":140,"title":{},"body":{"controllers/AuthController.html":{}}}],["request",{"_index":276,"title":{},"body":{"classes/HttpExceptionFilter.html":{},"injectables/LoggerMiddleware.html":{}}}],["request.get('user",{"_index":350,"title":{},"body":{"injectables/LoggerMiddleware.html":{}}}],["request.url",{"_index":296,"title":{},"body":{"classes/HttpExceptionFilter.html":{}}}],["requried",{"_index":664,"title":{},"body":{"index.html":{}}}],["reset",{"_index":51,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/UserModule.html":{},"overview.html":{}}}],["resources",{"_index":729,"title":{},"body":{"index.html":{}}}],["resp",{"_index":284,"title":{},"body":{"classes/HttpExceptionFilter.html":{}}}],["response",{"_index":270,"title":{},"body":{"classes/HttpExceptionFilter.html":{},"injectables/LoggerMiddleware.html":{}}}],["response.get('content",{"_index":354,"title":{},"body":{"injectables/LoggerMiddleware.html":{}}}],["response.on('finish",{"_index":352,"title":{},"body":{"injectables/LoggerMiddleware.html":{}}}],["response.status(status).json",{"_index":291,"title":{},"body":{"classes/HttpExceptionFilter.html":{}}}],["responsetime",{"_index":358,"title":{},"body":{"injectables/LoggerMiddleware.html":{}}}],["responsetime}ms",{"_index":365,"title":{},"body":{"injectables/LoggerMiddleware.html":{}}}],["result",{"_index":579,"title":{},"body":{"classes/Users1694279542731.html":{}}}],["results",{"_index":34,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/CreateUserDto.html":{},"classes/HttpExceptionFilter.html":{},"injectables/JwtAuthGuard.html":{},"interfaces/JwtPayload.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"injectables/LoggerMiddleware.html":{},"classes/LoginDto.html":{},"injectables/TypeOrmConfigService.html":{},"classes/UpdateUserDto.html":{},"entities/User.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"classes/Users1694279542731.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/variables.html":{}}}],["return",{"_index":32,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"injectables/TypeOrmConfigService.html":{},"entities/User.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["returns",{"_index":14,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/HttpExceptionFilter.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"injectables/LoggerMiddleware.html":{},"injectables/TypeOrmConfigService.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"classes/Users1694279542731.html":{},"miscellaneous/functions.html":{}}}],["rimraf",{"_index":634,"title":{},"body":{"dependencies.html":{}}}],["root",{"_index":657,"title":{},"body":{"index.html":{}}}],["run",{"_index":403,"title":{},"body":{"injectables/TypeOrmConfigService.html":{},"index.html":{}}}],["running",{"_index":676,"title":{},"body":{"index.html":{}}}],["runs",{"_index":803,"title":{},"body":{"index.html":{}}}],["rxjs",{"_index":636,"title":{},"body":{"dependencies.html":{}}}],["salt",{"_index":469,"title":{},"body":{"entities/User.html":{}}}],["same",{"_index":662,"title":{},"body":{"index.html":{}}}],["saml",{"_index":627,"title":{},"body":{"dependencies.html":{}}}],["scalability",{"_index":811,"title":{},"body":{"index.html":{}}}],["scalable",{"_index":126,"title":{},"body":{"injectables/AppService.html":{},"index.html":{}}}],["scaling",{"_index":820,"title":{},"body":{"index.html":{}}}],["scheme",{"_index":865,"title":{},"body":{"miscellaneous/variables.html":{}}}],["scripts",{"_index":759,"title":{},"body":{"index.html":{}}}],["seconds",{"_index":415,"title":{},"body":{"injectables/TypeOrmConfigService.html":{}}}],["secret",{"_index":183,"title":{},"body":{"modules/AuthModule.html":{}}}],["secretorkey",{"_index":324,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["security",{"_index":809,"title":{},"body":{"index.html":{}}}],["serial",{"_index":567,"title":{},"body":{"classes/Users1694279542731.html":{}}}],["server",{"_index":127,"title":{},"body":{"injectables/AppService.html":{},"index.html":{}}}],["setdescription('api",{"_index":861,"title":{},"body":{"miscellaneous/variables.html":{}}}],["setpassword(password",{"_index":468,"title":{},"body":{"entities/User.html":{}}}],["settitle('nestjs",{"_index":858,"title":{},"body":{"miscellaneous/variables.html":{}}}],["setup",{"_index":697,"title":{},"body":{"index.html":{}}}],["setupswagger",{"_index":600,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["setversion('1.0",{"_index":862,"title":{},"body":{"miscellaneous/variables.html":{}}}],["shapefile",{"_index":783,"title":{},"body":{"index.html":{}}}],["share",{"_index":734,"title":{},"body":{"index.html":{}}}],["shared/helper/env.helper",{"_index":80,"title":{},"body":{"modules/AppModule.html":{}}}],["shared/typeorm/typeorm.service",{"_index":82,"title":{},"body":{"modules/AppModule.html":{}}}],["shipping",{"_index":710,"title":{},"body":{"index.html":{}}}],["side",{"_index":128,"title":{},"body":{"injectables/AppService.html":{},"index.html":{}}}],["signoptions",{"_index":185,"title":{},"body":{"modules/AuthModule.html":{}}}],["similar",{"_index":735,"title":{},"body":{"index.html":{}}}],["sky",{"_index":860,"title":{},"body":{"miscellaneous/variables.html":{}}}],["source",{"_index":4,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/CreateUserDto.html":{},"classes/HttpExceptionFilter.html":{},"injectables/JwtAuthGuard.html":{},"interfaces/JwtPayload.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"injectables/LoggerMiddleware.html":{},"classes/LoginDto.html":{},"injectables/TypeOrmConfigService.html":{},"classes/UpdateUserDto.html":{},"entities/User.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"classes/Users1694279542731.html":{},"index.html":{}}}],["spining",{"_index":667,"title":{},"body":{"index.html":{}}}],["sponsors",{"_index":833,"title":{},"body":{"index.html":{}}}],["src",{"_index":417,"title":{},"body":{"injectables/TypeOrmConfigService.html":{}}}],["src/.../app.module.ts",{"_index":854,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../env.helper.ts",{"_index":647,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../index.ts",{"_index":855,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../main.ts",{"_index":646,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["src/app.controller.ts",{"_index":6,"title":{},"body":{"controllers/AppController.html":{},"coverage.html":{}}}],["src/app.controller.ts:15",{"_index":13,"title":{},"body":{"controllers/AppController.html":{}}}],["src/app.module.ts",{"_index":53,"title":{},"body":{"modules/AppModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app.module.ts:44",{"_index":58,"title":{},"body":{"modules/AppModule.html":{}}}],["src/app.service.ts",{"_index":110,"title":{},"body":{"injectables/AppService.html":{},"coverage.html":{}}}],["src/app.service.ts:12",{"_index":114,"title":{},"body":{"injectables/AppService.html":{}}}],["src/app.service.ts:6",{"_index":113,"title":{},"body":{"injectables/AppService.html":{}}}],["src/auth/auth.controller.ts",{"_index":131,"title":{},"body":{"controllers/AuthController.html":{},"coverage.html":{}}}],["src/auth/auth.controller.ts:17",{"_index":139,"title":{},"body":{"controllers/AuthController.html":{}}}],["src/auth/auth.module.ts",{"_index":169,"title":{},"body":{"modules/AuthModule.html":{}}}],["src/auth/auth.service",{"_index":318,"title":{},"body":{"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{}}}],["src/auth/auth.service.ts",{"_index":188,"title":{},"body":{"injectables/AuthService.html":{},"coverage.html":{}}}],["src/auth/auth.service.ts:16",{"_index":195,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/auth/auth.service.ts:24",{"_index":205,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/auth/auth.service.ts:45",{"_index":201,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/auth/auth.service.ts:56",{"_index":198,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/auth/authguard/jwt",{"_index":298,"title":{},"body":{"injectables/JwtAuthGuard.html":{},"controllers/UserController.html":{},"coverage.html":{}}}],["src/auth/authguard/local",{"_index":326,"title":{},"body":{"injectables/LocalAuthGuard.html":{},"coverage.html":{}}}],["src/auth/dto/login.dto.ts",{"_index":366,"title":{},"body":{"classes/LoginDto.html":{},"coverage.html":{}}}],["src/auth/dto/login.dto.ts:6",{"_index":368,"title":{},"body":{"classes/LoginDto.html":{}}}],["src/auth/dto/login.dto.ts:9",{"_index":369,"title":{},"body":{"classes/LoginDto.html":{}}}],["src/auth/strategy/jwt/jwt.payload.ts",{"_index":305,"title":{},"body":{"interfaces/JwtPayload.html":{},"coverage.html":{}}}],["src/auth/strategy/jwt/jwt.strategy.ts",{"_index":309,"title":{},"body":{"injectables/JwtStrategy.html":{},"coverage.html":{}}}],["src/auth/strategy/jwt/jwt.strategy.ts:10",{"_index":311,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["src/auth/strategy/jwt/jwt.strategy.ts:23",{"_index":312,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["src/auth/strategy/local/local.strategy.ts",{"_index":328,"title":{},"body":{"injectables/LocalStrategy.html":{},"coverage.html":{}}}],["src/auth/strategy/local/local.strategy.ts:15",{"_index":331,"title":{},"body":{"injectables/LocalStrategy.html":{}}}],["src/auth/strategy/local/local.strategy.ts:7",{"_index":329,"title":{},"body":{"injectables/LocalStrategy.html":{}}}],["src/filter/http",{"_index":260,"title":{},"body":{"classes/HttpExceptionFilter.html":{},"coverage.html":{}}}],["src/main.ts",{"_index":596,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["src/middleware/logger.middleware.ts",{"_index":336,"title":{},"body":{"injectables/LoggerMiddleware.html":{},"coverage.html":{}}}],["src/middleware/logger.middleware.ts:6",{"_index":342,"title":{},"body":{"injectables/LoggerMiddleware.html":{}}}],["src/middleware/logger.middleware.ts:8",{"_index":340,"title":{},"body":{"injectables/LoggerMiddleware.html":{}}}],["src/migrations/1694279542731",{"_index":554,"title":{},"body":{"classes/Users1694279542731.html":{},"coverage.html":{}}}],["src/shared/config/env",{"_index":673,"title":{},"body":{"index.html":{}}}],["src/shared/helper/env.helper.ts",{"_index":598,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/shared/swagger/index.ts",{"_index":599,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/shared/typeorm/typeorm.service.ts",{"_index":370,"title":{},"body":{"injectables/TypeOrmConfigService.html":{},"coverage.html":{}}}],["src/shared/typeorm/typeorm.service.ts:11",{"_index":373,"title":{},"body":{"injectables/TypeOrmConfigService.html":{}}}],["src/shared/typeorm/typeorm.service.ts:7",{"_index":377,"title":{},"body":{"injectables/TypeOrmConfigService.html":{}}}],["src/shared/typeorm/typeorm.service.ts:9",{"_index":375,"title":{},"body":{"injectables/TypeOrmConfigService.html":{}}}],["src/user/dto/create",{"_index":244,"title":{},"body":{"classes/CreateUserDto.html":{},"coverage.html":{}}}],["src/user/dto/update",{"_index":420,"title":{},"body":{"classes/UpdateUserDto.html":{},"coverage.html":{}}}],["src/user/entities/user.entity",{"_index":209,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/user/entities/user.entity.ts",{"_index":428,"title":{},"body":{"entities/User.html":{},"coverage.html":{}}}],["src/user/entities/user.entity.ts:15",{"_index":447,"title":{},"body":{"entities/User.html":{}}}],["src/user/entities/user.entity.ts:28",{"_index":444,"title":{},"body":{"entities/User.html":{}}}],["src/user/entities/user.entity.ts:32",{"_index":450,"title":{},"body":{"entities/User.html":{}}}],["src/user/entities/user.entity.ts:35",{"_index":445,"title":{},"body":{"entities/User.html":{}}}],["src/user/entities/user.entity.ts:38",{"_index":448,"title":{},"body":{"entities/User.html":{}}}],["src/user/entities/user.entity.ts:41",{"_index":438,"title":{},"body":{"entities/User.html":{}}}],["src/user/entities/user.entity.ts:44",{"_index":440,"title":{},"body":{"entities/User.html":{}}}],["src/user/entities/user.entity.ts:47",{"_index":452,"title":{},"body":{"entities/User.html":{}}}],["src/user/entities/user.entity.ts:50",{"_index":453,"title":{},"body":{"entities/User.html":{}}}],["src/user/user.controller.ts",{"_index":474,"title":{},"body":{"controllers/UserController.html":{},"coverage.html":{}}}],["src/user/user.controller.ts:34",{"_index":480,"title":{},"body":{"controllers/UserController.html":{}}}],["src/user/user.controller.ts:39",{"_index":481,"title":{},"body":{"controllers/UserController.html":{}}}],["src/user/user.controller.ts:46",{"_index":484,"title":{},"body":{"controllers/UserController.html":{}}}],["src/user/user.controller.ts:51",{"_index":490,"title":{},"body":{"controllers/UserController.html":{}}}],["src/user/user.controller.ts:56",{"_index":487,"title":{},"body":{"controllers/UserController.html":{}}}],["src/user/user.module",{"_index":171,"title":{},"body":{"modules/AuthModule.html":{}}}],["src/user/user.module.ts",{"_index":519,"title":{},"body":{"modules/UserModule.html":{}}}],["src/user/user.service",{"_index":210,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/user/user.service.ts",{"_index":523,"title":{},"body":{"injectables/UserService.html":{},"coverage.html":{}}}],["src/user/user.service.ts:11",{"_index":528,"title":{},"body":{"injectables/UserService.html":{}}}],["src/user/user.service.ts:18",{"_index":530,"title":{},"body":{"injectables/UserService.html":{}}}],["src/user/user.service.ts:28",{"_index":531,"title":{},"body":{"injectables/UserService.html":{}}}],["src/user/user.service.ts:32",{"_index":537,"title":{},"body":{"injectables/UserService.html":{}}}],["src/user/user.service.ts:36",{"_index":536,"title":{},"body":{"injectables/UserService.html":{}}}],["src/user/user.service.ts:40",{"_index":533,"title":{},"body":{"injectables/UserService.html":{}}}],["src/user/user.service.ts:48",{"_index":535,"title":{},"body":{"injectables/UserService.html":{}}}],["ssee",{"_index":746,"title":{},"body":{"index.html":{}}}],["staging",{"_index":98,"title":{},"body":{"modules/AppModule.html":{},"index.html":{}}}],["start",{"_index":701,"title":{},"body":{"index.html":{}}}],["start:dev",{"_index":704,"title":{},"body":{"index.html":{}}}],["start:prodrunning",{"_index":705,"title":{},"body":{"index.html":{}}}],["startat",{"_index":344,"title":{},"body":{"injectables/LoggerMiddleware.html":{}}}],["started",{"_index":651,"title":{"index.html":{}},"body":{}}],["statements",{"_index":588,"title":{},"body":{"coverage.html":{}}}],["states.1252",{"_index":688,"title":{},"body":{"index.html":{}}}],["status",{"_index":278,"title":{},"body":{"classes/HttpExceptionFilter.html":{}}}],["statuscode",{"_index":286,"title":{},"body":{"classes/HttpExceptionFilter.html":{},"injectables/LoggerMiddleware.html":{}}}],["storage",{"_index":781,"title":{},"body":{"index.html":{}}}],["strategy",{"_index":316,"title":{},"body":{"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{}}}],["strategy/jwt/jwt.payload",{"_index":211,"title":{},"body":{"injectables/AuthService.html":{}}}],["strategy/jwt/jwt.strategy",{"_index":176,"title":{},"body":{"modules/AuthModule.html":{}}}],["strategy/local/local.strategy",{"_index":177,"title":{},"body":{"modules/AuthModule.html":{}}}],["string",{"_index":15,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"injectables/AuthService.html":{},"classes/CreateUserDto.html":{},"interfaces/JwtPayload.html":{},"injectables/LocalStrategy.html":{},"classes/LoginDto.html":{},"entities/User.html":{},"injectables/UserService.html":{},"classes/Users1694279542731.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["structures",{"_index":738,"title":{},"body":{"index.html":{}}}],["sub",{"_index":237,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/JwtPayload.html":{}}}],["super",{"_index":321,"title":{},"body":{"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{}}}],["support",{"_index":828,"title":{},"body":{"index.html":{},"modules.html":{}}}],["svg",{"_index":843,"title":{},"body":{"modules.html":{}}}],["swagger",{"_index":638,"title":{},"body":{"dependencies.html":{},"index.html":{}}}],["swaggercustomoptions",{"_index":875,"title":{},"body":{"miscellaneous/variables.html":{}}}],["swaggermodule.createdocument(app",{"_index":873,"title":{},"body":{"miscellaneous/variables.html":{}}}],["swaggermodule.setup('docs",{"_index":881,"title":{},"body":{"miscellaneous/variables.html":{}}}],["swaggeroptions",{"_index":876,"title":{},"body":{"miscellaneous/variables.html":{}}}],["swiss",{"_index":764,"title":{},"body":{"index.html":{}}}],["synchronize",{"_index":406,"title":{},"body":{"injectables/TypeOrmConfigService.html":{}}}],["system",{"_index":817,"title":{},"body":{"index.html":{}}}],["table",{"_index":566,"title":{},"body":{"classes/Users1694279542731.html":{},"coverage.html":{},"index.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":603,"title":{},"body":{"coverage.html":{}}}],["tablespace",{"_index":690,"title":{},"body":{"index.html":{}}}],["team",{"_index":723,"title":{},"body":{"index.html":{}}}],["test",{"_index":99,"title":{},"body":{"modules/AppModule.html":{},"index.html":{}}}],["test:covswagger",{"_index":720,"title":{},"body":{"index.html":{}}}],["test:e2e",{"_index":719,"title":{},"body":{"index.html":{}}}],["tests",{"_index":717,"title":{},"body":{"index.html":{}}}],["text",{"_index":583,"title":{},"body":{"classes/Users1694279542731.html":{}}}],["thanks",{"_index":832,"title":{},"body":{"index.html":{}}}],["this.appservice.gethello",{"_index":33,"title":{},"body":{"controllers/AppController.html":{}}}],["this.authservice.generatetoken(req.user",{"_index":162,"title":{},"body":{"controllers/AuthController.html":{}}}],["this.authservice.validate(payload",{"_index":325,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["this.authservice.validateuser(email",{"_index":335,"title":{},"body":{"injectables/LocalStrategy.html":{}}}],["this.configservice.get",{"_index":381,"title":{},"body":{"injectables/TypeOrmConfigService.html":{}}}],["this.configservice.get('database_host",{"_index":383,"title":{},"body":{"injectables/TypeOrmConfigService.html":{}}}],["this.configservice.get('database_name",{"_index":388,"title":{},"body":{"injectables/TypeOrmConfigService.html":{}}}],["this.configservice.get('database_password",{"_index":391,"title":{},"body":{"injectables/TypeOrmConfigService.html":{}}}],["this.configservice.get('database_port",{"_index":385,"title":{},"body":{"injectables/TypeOrmConfigService.html":{}}}],["this.configservice.get('database_username",{"_index":390,"title":{},"body":{"injectables/TypeOrmConfigService.html":{}}}],["this.configservice.get('jwt_expiration_time",{"_index":239,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.configservice.get('node_env",{"_index":407,"title":{},"body":{"injectables/TypeOrmConfigService.html":{}}}],["this.firstname",{"_index":466,"title":{},"body":{"entities/User.html":{}}}],["this.jwtservice.sign",{"_index":241,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.lastname",{"_index":467,"title":{},"body":{"entities/User.html":{}}}],["this.logger.log",{"_index":364,"title":{},"body":{"injectables/LoggerMiddleware.html":{},"injectables/TypeOrmConfigService.html":{}}}],["this.password",{"_index":471,"title":{},"body":{"entities/User.html":{}}}],["this.userservice.create(createuserdto",{"_index":505,"title":{},"body":{"controllers/UserController.html":{}}}],["this.userservice.findall",{"_index":506,"title":{},"body":{"controllers/UserController.html":{}}}],["this.userservice.finduserbyemail(email",{"_index":214,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.userservice.finduserbyid(+payload.sub",{"_index":233,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.userservice.finduserbyid(id",{"_index":511,"title":{},"body":{"controllers/UserController.html":{}}}],["this.userservice.remove(id",{"_index":515,"title":{},"body":{"controllers/UserController.html":{}}}],["this.userservice.update(id",{"_index":513,"title":{},"body":{"controllers/UserController.html":{}}}],["this.usersrepository.delete",{"_index":551,"title":{},"body":{"injectables/UserService.html":{}}}],["this.usersrepository.find",{"_index":549,"title":{},"body":{"injectables/UserService.html":{}}}],["this.usersrepository.findone",{"_index":552,"title":{},"body":{"injectables/UserService.html":{}}}],["this.usersrepository.save(user",{"_index":548,"title":{},"body":{"injectables/UserService.html":{}}}],["this.usersrepository.update",{"_index":550,"title":{},"body":{"injectables/UserService.html":{}}}],["throw",{"_index":215,"title":{},"body":{"injectables/AuthService.html":{}}}],["time",{"_index":570,"title":{},"body":{"classes/Users1694279542731.html":{}}}],["timestamp",{"_index":293,"title":{},"body":{"classes/HttpExceptionFilter.html":{},"classes/Users1694279542731.html":{}}}],["timestamptz",{"_index":436,"title":{},"body":{"entities/User.html":{}}}],["token",{"_index":869,"title":{},"body":{"miscellaneous/variables.html":{}}}],["tool",{"_index":732,"title":{},"body":{"index.html":{}}}],["transformer",{"_index":442,"title":{},"body":{"entities/User.html":{},"dependencies.html":{}}}],["true",{"_index":90,"title":{},"body":{"modules/AppModule.html":{},"injectables/TypeOrmConfigService.html":{},"entities/User.html":{},"miscellaneous/variables.html":{}}}],["try",{"_index":213,"title":{},"body":{"injectables/AuthService.html":{}}}],["tsconfig.json",{"_index":745,"title":{},"body":{"index.html":{}}}],["two",{"_index":798,"title":{},"body":{"index.html":{}}}],["type",{"_index":61,"title":{},"body":{"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/CreateUserDto.html":{},"classes/HttpExceptionFilter.html":{},"interfaces/JwtPayload.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"injectables/LoggerMiddleware.html":{},"classes/LoginDto.html":{},"injectables/TypeOrmConfigService.html":{},"entities/User.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"classes/Users1694279542731.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["typeorm",{"_index":460,"title":{},"body":{"entities/User.html":{},"injectables/UserService.html":{},"classes/Users1694279542731.html":{},"dependencies.html":{},"index.html":{}}}],["typeorm:migration:generate",{"_index":760,"title":{},"body":{"index.html":{}}}],["typeorm:migration:run",{"_index":761,"title":{},"body":{"index.html":{}}}],["typeorm_migrations",{"_index":399,"title":{},"body":{"injectables/TypeOrmConfigService.html":{}}}],["typeormconfigservice",{"_index":81,"title":{"injectables/TypeOrmConfigService.html":{}},"body":{"modules/AppModule.html":{},"injectables/TypeOrmConfigService.html":{},"coverage.html":{}}}],["typeormmodule",{"_index":73,"title":{},"body":{"modules/AppModule.html":{},"modules/UserModule.html":{}}}],["typeormmodule.forfeature([user",{"_index":522,"title":{},"body":{"modules/UserModule.html":{}}}],["typeormmodule.forrootasync",{"_index":103,"title":{},"body":{"modules/AppModule.html":{}}}],["typeormmoduleoptions",{"_index":374,"title":{},"body":{"injectables/TypeOrmConfigService.html":{}}}],["typeormoptionsfactory",{"_index":378,"title":{},"body":{"injectables/TypeOrmConfigService.html":{}}}],["types",{"_index":423,"title":{},"body":{"classes/UpdateUserDto.html":{},"dependencies.html":{}}}],["typescript",{"_index":225,"title":{},"body":{"injectables/AuthService.html":{},"index.html":{}}}],["ui",{"_index":639,"title":{},"body":{"dependencies.html":{},"index.html":{}}}],["unauthorizedexception",{"_index":208,"title":{},"body":{"injectables/AuthService.html":{}}}],["unauthorizedexception('incorrect",{"_index":216,"title":{},"body":{"injectables/AuthService.html":{}}}],["unauthorizedexception(err.message",{"_index":232,"title":{},"body":{"injectables/AuthService.html":{}}}],["undefined",{"_index":443,"title":{},"body":{"entities/User.html":{}}}],["understand",{"_index":753,"title":{},"body":{"index.html":{}}}],["unique",{"_index":462,"title":{},"body":{"entities/User.html":{},"classes/Users1694279542731.html":{}}}],["unit",{"_index":716,"title":{},"body":{"index.html":{}}}],["unknown",{"_index":272,"title":{},"body":{"classes/HttpExceptionFilter.html":{},"injectables/UserService.html":{}}}],["unlicensed",{"_index":851,"title":{},"body":{"properties.html":{}}}],["unused",{"_index":227,"title":{},"body":{"injectables/AuthService.html":{}}}],["up",{"_index":558,"title":{},"body":{"classes/Users1694279542731.html":{},"index.html":{}}}],["up(queryrunner",{"_index":563,"title":{},"body":{"classes/Users1694279542731.html":{}}}],["update",{"_index":478,"title":{},"body":{"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["update(@param('id",{"_index":512,"title":{},"body":{"controllers/UserController.html":{}}}],["update(id",{"_index":488,"title":{},"body":{"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["updatedat",{"_index":432,"title":{},"body":{"entities/User.html":{},"classes/Users1694279542731.html":{}}}],["updatedatecolumn",{"_index":459,"title":{},"body":{"entities/User.html":{}}}],["updatedatecolumn({type",{"_index":451,"title":{},"body":{"entities/User.html":{}}}],["updatedby",{"_index":433,"title":{},"body":{"entities/User.html":{},"classes/Users1694279542731.html":{}}}],["updateuserdto",{"_index":419,"title":{"classes/UpdateUserDto.html":{}},"body":{"classes/UpdateUserDto.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["uq_97672ac88f789774dd47f7c8be3",{"_index":574,"title":{},"body":{"classes/Users1694279542731.html":{}}}],["use",{"_index":337,"title":{},"body":{"injectables/LoggerMiddleware.html":{},"injectables/TypeOrmConfigService.html":{},"index.html":{}}}],["use(request",{"_index":338,"title":{},"body":{"injectables/LoggerMiddleware.html":{}}}],["useclass",{"_index":104,"title":{},"body":{"modules/AppModule.html":{}}}],["usefactory",{"_index":182,"title":{},"body":{"modules/AuthModule.html":{}}}],["useguards",{"_index":143,"title":{},"body":{"controllers/AuthController.html":{},"controllers/UserController.html":{}}}],["useguards(jwtauthguard",{"_index":507,"title":{},"body":{"controllers/UserController.html":{}}}],["useguards(jwtauthguard)@apibearerauth('accesstoken')@get(':id",{"_index":483,"title":{},"body":{"controllers/UserController.html":{}}}],["useguards(localauthguard",{"_index":158,"title":{},"body":{"controllers/AuthController.html":{}}}],["useguards(localauthguard)@apibody({type",{"_index":137,"title":{},"body":{"controllers/AuthController.html":{}}}],["useinterceptors",{"_index":495,"title":{},"body":{"controllers/UserController.html":{}}}],["useinterceptors(classserializerinterceptor",{"_index":502,"title":{},"body":{"controllers/UserController.html":{}}}],["user",{"_index":197,"title":{"entities/User.html":{}},"body":{"injectables/AuthService.html":{},"entities/User.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["user.controller",{"_index":521,"title":{},"body":{"modules/UserModule.html":{}}}],["user.dto",{"_index":425,"title":{},"body":{"classes/UpdateUserDto.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["user.dto.ts",{"_index":245,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/UpdateUserDto.html":{},"coverage.html":{}}}],["user.dto.ts:13",{"_index":251,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["user.dto.ts:17",{"_index":252,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["user.dto.ts:6",{"_index":249,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["user.dto.ts:9",{"_index":254,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["user.email",{"_index":541,"title":{},"body":{"injectables/UserService.html":{}}}],["user.firstname",{"_index":544,"title":{},"body":{"injectables/UserService.html":{}}}],["user.id.tostring",{"_index":238,"title":{},"body":{"injectables/AuthService.html":{}}}],["user.lastname",{"_index":546,"title":{},"body":{"injectables/UserService.html":{}}}],["user.password",{"_index":220,"title":{},"body":{"injectables/AuthService.html":{},"injectables/UserService.html":{}}}],["user.service",{"_index":496,"title":{},"body":{"controllers/UserController.html":{},"modules/UserModule.html":{}}}],["user/user.module",{"_index":83,"title":{},"body":{"modules/AppModule.html":{}}}],["user=your",{"_index":793,"title":{},"body":{"index.html":{}}}],["useragent",{"_index":349,"title":{},"body":{"injectables/LoggerMiddleware.html":{}}}],["usercontroller",{"_index":473,"title":{"controllers/UserController.html":{}},"body":{"controllers/UserController.html":{},"modules/UserModule.html":{},"coverage.html":{}}}],["usermodule",{"_index":49,"title":{"modules/UserModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/UserModule.html":{},"modules.html":{},"overview.html":{}}}],["username",{"_index":389,"title":{},"body":{"injectables/TypeOrmConfigService.html":{},"index.html":{}}}],["usernamefield",{"_index":333,"title":{},"body":{"injectables/LocalStrategy.html":{}}}],["users",{"_index":461,"title":{},"body":{"entities/User.html":{},"controllers/UserController.html":{},"classes/Users1694279542731.html":{}}}],["users.ts",{"_index":555,"title":{},"body":{"classes/Users1694279542731.html":{},"coverage.html":{}}}],["users.ts:15",{"_index":562,"title":{},"body":{"classes/Users1694279542731.html":{}}}],["users.ts:4",{"_index":559,"title":{},"body":{"classes/Users1694279542731.html":{}}}],["users.ts:6",{"_index":564,"title":{},"body":{"classes/Users1694279542731.html":{}}}],["users1694279542731",{"_index":553,"title":{"classes/Users1694279542731.html":{}},"body":{"classes/Users1694279542731.html":{},"coverage.html":{}}}],["userservice",{"_index":193,"title":{"injectables/UserService.html":{}},"body":{"injectables/AuthService.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"coverage.html":{},"overview.html":{}}}],["usersrepository",{"_index":529,"title":{},"body":{"injectables/UserService.html":{}}}],["using",{"_index":706,"title":{},"body":{"index.html":{}}}],["utf8",{"_index":685,"title":{},"body":{"index.html":{}}}],["valid('development",{"_index":96,"title":{},"body":{"modules/AppModule.html":{}}}],["validate",{"_index":190,"title":{},"body":{"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{}}}],["validate(email",{"_index":330,"title":{},"body":{"injectables/LocalStrategy.html":{}}}],["validate(payload",{"_index":199,"title":{},"body":{"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{}}}],["validateuser",{"_index":191,"title":{},"body":{"injectables/AuthService.html":{}}}],["validateuser(email",{"_index":203,"title":{},"body":{"injectables/AuthService.html":{}}}],["validationschema",{"_index":92,"title":{},"body":{"modules/AppModule.html":{}}}],["validator",{"_index":258,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/LoginDto.html":{},"dependencies.html":{}}}],["value",{"_index":116,"title":{},"body":{"injectables/AppService.html":{},"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"injectables/LoggerMiddleware.html":{},"injectables/TypeOrmConfigService.html":{},"entities/User.html":{},"injectables/UserService.html":{},"classes/Users1694279542731.html":{},"miscellaneous/variables.html":{}}}],["value.tolowercase",{"_index":463,"title":{},"body":{"entities/User.html":{}}}],["variable",{"_index":591,"title":{},"body":{"coverage.html":{},"index.html":{}}}],["variables",{"_index":853,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["vars",{"_index":228,"title":{},"body":{"injectables/AuthService.html":{}}}],["varying",{"_index":569,"title":{},"body":{"classes/Users1694279542731.html":{}}}],["version",{"_index":849,"title":{},"body":{"properties.html":{}}}],["visualize",{"_index":726,"title":{},"body":{"index.html":{}}}],["void",{"_index":64,"title":{},"body":{"modules/AppModule.html":{},"classes/HttpExceptionFilter.html":{},"injectables/LoggerMiddleware.html":{}}}],["watch",{"_index":702,"title":{},"body":{"index.html":{}}}],["way",{"_index":777,"title":{},"body":{"index.html":{}}}],["ways",{"_index":799,"title":{},"body":{"index.html":{}}}],["web",{"_index":805,"title":{},"body":{"index.html":{}}}],["webpack",{"_index":642,"title":{},"body":{"dependencies.html":{}}}],["website",{"_index":840,"title":{},"body":{"index.html":{}}}],["well",{"_index":740,"title":{},"body":{"index.html":{}}}],["works",{"_index":739,"title":{},"body":{"index.html":{}}}],["you'd",{"_index":836,"title":{},"body":{"index.html":{}}}],["zone",{"_index":571,"title":{},"body":{"classes/Users1694279542731.html":{}}}],["zoom",{"_index":50,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/UserModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"controllers/AppController.html":{"url":"controllers/AppController.html","title":"controller - AppController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  AppController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app.controller.ts\n        \n\n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                getHello\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        getHello\n                        \n                    \n                \n            \n            \n                \n                    \n                    getHello()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()\n                \n            \n\n            \n                \n                    Defined in src/app.controller.ts:15\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Get, Inject, Logger } from '@nestjs/common';\nimport { ConfigService } from '@nestjs/config';\nimport { AppService } from './app.service';\n\n@Controller()\nexport class AppController {\n  private readonly logger = new Logger(AppController.name);\n\n  constructor(\n    private readonly appService: AppService,\n    @Inject(ConfigService) private readonly configService: ConfigService,\n  ) {}\n\n  @Get()\n  getHello(): string {\n    return this.appService.getHello();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n    Modules\n    AppModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_providers\n\n\n\ncluster_AppModule_imports\n\n\n\n\nAuthModule\n\nAuthModule\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAuthModule->AppModule\n\n\n\n\n\nUserModule\n\nUserModule\n\nAppModule -->\n\nUserModule->AppModule\n\n\n\n\n\nAppService\n\nAppService\n\nAppModule -->\n\nAppService->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            AppService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            AppController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            AuthModule\n                        \n                        \n                            UserModule\n                        \n                    \n                \n            \n        \n\n        \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        configure\n                        \n                    \n                \n            \n            \n                \nconfigure(consumer: MiddlewareConsumer)\n                \n            \n\n\n            \n                \n                    Defined in src/app.module.ts:44\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    consumer\n                                    \n                                            MiddlewareConsumer\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n\n\n    \n        import { LoggingInterceptor } from '@algoan/nestjs-logging-interceptor';\nimport { MiddlewareConsumer, Module, NestModule } from '@nestjs/common';\nimport { ConfigModule } from '@nestjs/config';\nimport { APP_INTERCEPTOR } from '@nestjs/core';\nimport { TypeOrmModule } from '@nestjs/typeorm';\nimport * as Joi from 'joi';\nimport { AppController } from './app.controller';\nimport { AppService } from './app.service';\nimport { LoggerMiddleware } from './middleware/logger.middleware';\nimport { getEnvPath } from './shared/helper/env.helper';\nimport { TypeOrmConfigService } from './shared/typeorm/typeorm.service';\nimport { UserModule } from './user/user.module';\nimport { AuthModule } from './auth/auth.module';\n\nconst envFilePath: string = getEnvPath(`${__dirname}/shared/config/env`);\n\n@Module({\n  imports: [\n    ConfigModule.forRoot({\n      isGlobal: true,\n      cache: true,\n      envFilePath,\n      validationSchema: Joi.object({\n        NODE_ENV: Joi.string()\n          .valid('development', 'production', 'staging', 'test')\n          .default('development'),\n        PORT: Joi.number().default(3000),\n      }),\n    }),\n    TypeOrmModule.forRootAsync({ useClass: TypeOrmConfigService }),\n    AuthModule,\n    UserModule,\n  ],\n  controllers: [AppController],\n  providers: [\n    AppService,\n    {\n      provide: APP_INTERCEPTOR,\n      useClass: LoggingInterceptor,\n    },\n  ],\n})\nexport class AppModule implements NestModule {\n  configure(consumer: MiddlewareConsumer): void {\n    consumer.apply(LoggerMiddleware).forRoutes('*');\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AppService.html":{"url":"injectables/AppService.html","title":"injectable - AppService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  AppService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Readonly\n                                logger\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getHello\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(configService: ConfigService)\n                    \n                \n                        \n                            \n                                Defined in src/app.service.ts:6\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        configService\n                                                  \n                                                        \n                                                                    ConfigService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getHello\n                        \n                    \n                \n            \n            \n                \ngetHello()\n                \n            \n\n\n            \n                \n                    Defined in src/app.service.ts:12\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        logger\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Logger(AppService.name)\n                    \n                \n                    \n                        \n                                Defined in src/app.service.ts:6\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Inject, Injectable, Logger } from '@nestjs/common';\nimport { ConfigService } from '@nestjs/config';\n\n@Injectable()\nexport class AppService {\n  private readonly logger = new Logger(AppService.name);\n\n  constructor(\n    @Inject(ConfigService) private readonly configService: ConfigService,\n  ) {}\n\n  getHello(): string {\n    return 'Hello, nest! A progressive Node.js framework for building efficient, reliable and scalable server-side applications.';\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/AuthController.html":{"url":"controllers/AuthController.html","title":"controller - AuthController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  AuthController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/auth.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                auth\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                    Async\n                                login\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        \n                        \n                        Async\n                        login\n                        \n                    \n                \n            \n            \n                \n                    \n                    login(req)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @UseGuards(LocalAuthGuard)@ApiBody({type: LoginDto})@Post('/login')\n                \n            \n\n            \n                \n                    Defined in src/auth/auth.controller.ts:17\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    req\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Post, Logger, UseGuards, Req } from '@nestjs/common';\nimport { ApiBody, ApiTags } from '@nestjs/swagger';\nimport { AuthService } from './auth.service';\nimport { LocalAuthGuard } from './authGuard/local-auth.guard';\nimport { LoginDto } from './dto/login.dto';\n\n@ApiTags('Authentication')\n@Controller('auth')\nexport class AuthController {\n  private readonly logger = new Logger(AuthController.name);\n\n  constructor(private readonly authService: AuthService) {}\n\n  @UseGuards(LocalAuthGuard)\n  @ApiBody({ type: LoginDto })\n  @Post('/login')\n  async login(@Req() req): Promise {\n    return await this.authService.generateToken(req.user);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AuthModule.html":{"url":"modules/AuthModule.html","title":"module - AuthModule","body":"\n                   \n\n\n\n\n    Modules\n    AuthModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AuthModule\n\n\n\ncluster_AuthModule_imports\n\n\n\ncluster_AuthModule_providers\n\n\n\ncluster_AuthModule_exports\n\n\n\n\nUserModule\n\nUserModule\n\n\n\nAuthModule\n\nAuthModule\n\nAuthModule -->\n\nUserModule->AuthModule\n\n\n\n\n\nAuthService \n\nAuthService \n\nAuthService  -->\n\nAuthModule->AuthService \n\n\n\n\n\nAuthService\n\nAuthService\n\nAuthModule -->\n\nAuthService->AuthModule\n\n\n\n\n\nJwtStrategy\n\nJwtStrategy\n\nAuthModule -->\n\nJwtStrategy->AuthModule\n\n\n\n\n\nLocalStrategy\n\nLocalStrategy\n\nAuthModule -->\n\nLocalStrategy->AuthModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/auth/auth.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            AuthService\n                        \n                        \n                            JwtStrategy\n                        \n                        \n                            LocalStrategy\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            AuthController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            UserModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            AuthService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { AuthService } from './auth.service';\nimport { AuthController } from './auth.controller';\nimport { UserModule } from 'src/user/user.module';\nimport { PassportModule } from '@nestjs/passport';\nimport { JwtModule } from '@nestjs/jwt';\nimport { JwtStrategy } from './strategy/jwt/jwt.strategy';\nimport { LocalStrategy } from './strategy/local/local.strategy';\nimport { ConfigModule, ConfigService } from '@nestjs/config';\n\n@Module({\n  imports: [\n    UserModule,\n    PassportModule.register({ defaultStrategy: 'jwt' }),\n    JwtModule.registerAsync({\n      imports: [ConfigModule],\n      useFactory: async (configService: ConfigService) => {\n        return {\n          secret: configService.get('JWT_SECRET_KEY'),\n          signOptions: {\n            expiresIn: configService.get('JWT_EXPIRATION_TIME'),\n          },\n        };\n      },\n      inject: [ConfigService],\n    }),\n  ],\n  controllers: [AuthController],\n  providers: [AuthService, LocalStrategy, JwtStrategy],\n  exports: [AuthService, PassportModule, JwtModule],\n})\nexport class AuthModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AuthService.html":{"url":"injectables/AuthService.html","title":"injectable - AuthService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  AuthService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/auth.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Readonly\n                                logger\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                generateToken\n                            \n                            \n                                    Async\n                                validate\n                            \n                            \n                                    Async\n                                validateUser\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(userService: UserService, configService: ConfigService, jwtService: JwtService)\n                    \n                \n                        \n                            \n                                Defined in src/auth/auth.service.ts:16\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        userService\n                                                  \n                                                        \n                                                                        UserService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        configService\n                                                  \n                                                        \n                                                                    ConfigService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        jwtService\n                                                  \n                                                        \n                                                                    JwtService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        generateToken\n                        \n                    \n                \n            \n            \n                \n                    \n                    generateToken(user: User)\n                \n            \n\n\n            \n                \n                    Defined in src/auth/auth.service.ts:56\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    user\n                                    \n                                                User\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        validate\n                        \n                    \n                \n            \n            \n                \n                    \n                    validate(payload: JwtPayload)\n                \n            \n\n\n            \n                \n                    Defined in src/auth/auth.service.ts:45\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    payload\n                                    \n                                                JwtPayload\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        validateUser\n                        \n                    \n                \n            \n            \n                \n                    \n                    validateUser(email: string, password: string)\n                \n            \n\n\n            \n                \n                    Defined in src/auth/auth.service.ts:24\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    email\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    password\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        logger\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Logger(AuthService.name)\n                    \n                \n                    \n                        \n                                Defined in src/auth/auth.service.ts:16\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import {\n  Inject,\n  Injectable,\n  Logger,\n  UnauthorizedException,\n} from '@nestjs/common';\nimport { ConfigService } from '@nestjs/config';\nimport { User } from 'src/user/entities/user.entity';\nimport { UserService } from 'src/user/user.service';\nimport { JwtPayload } from './strategy/jwt/jwt.payload';\nimport { JwtService } from '@nestjs/jwt';\nimport * as bcrypt from 'bcrypt';\n\n@Injectable()\nexport class AuthService {\n  private readonly logger = new Logger(AuthService.name);\n\n  constructor(\n    private readonly userService: UserService,\n    @Inject(ConfigService) private readonly configService: ConfigService,\n    private readonly jwtService: JwtService,\n  ) {}\n\n  async validateUser(email: string, password: string): Promise {\n    try {\n      const user: User = await this.userService.findUserByEmail(email);\n\n      if (!user) {\n        throw new UnauthorizedException('Incorrect Credentials');\n      }\n\n      const match = await bcrypt.compare(password, user.password);\n      if (!match) {\n        throw new UnauthorizedException('Incorrect Credentials');\n      }\n\n      // eslint-disable-next-line @typescript-eslint/no-unused-vars\n      delete user.password;\n      return user;\n    } catch (err) {\n      throw new UnauthorizedException(err.message);\n    }\n  }\n\n  async validate(payload: JwtPayload): Promise {\n    const user = await this.userService.findUserById(+payload.sub);\n    if (!user) {\n      throw new UnauthorizedException(\n        'You are not authorized to perform the operation',\n      );\n    }\n    delete user.password;\n    return user;\n  }\n\n  async generateToken(user: User): Promise {\n    const payload: JwtPayload = {\n      sub: user.id.toString(),\n    };\n    return {\n      expiresIn: this.configService.get('JWT_EXPIRATION_TIME'),\n      accessToken: this.jwtService.sign({ ...payload }),\n    };\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateUserDto.html":{"url":"classes/CreateUserDto.html","title":"class - CreateUserDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateUserDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/user/dto/create-user.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                email\n                            \n                            \n                                    \n                                    \n                                    Optional\n                                firstName\n                            \n                            \n                                    \n                                    \n                                    Optional\n                                lastName\n                            \n                            \n                                    \n                                password\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsEmail()@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/user/dto/create-user.dto.ts:6\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Optional\n                        firstName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsOptional()@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/user/dto/create-user.dto.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Optional\n                        lastName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsOptional()@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/user/dto/create-user.dto.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        password\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/user/dto/create-user.dto.ts:9\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsEmail, IsNotEmpty, IsOptional, IsString } from 'class-validator';\n\nexport class CreateUserDto {\n  @IsEmail()\n  @IsNotEmpty()\n  email: string;\n\n  @IsNotEmpty()\n  password: string;\n\n  @IsOptional()\n  @IsString()\n  firstName?: string;\n\n  @IsOptional()\n  @IsString()\n  lastName?: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/HttpExceptionFilter.html":{"url":"classes/HttpExceptionFilter.html","title":"class - HttpExceptionFilter","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  HttpExceptionFilter\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/filter/http-exception.filter.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                        ExceptionFilter\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                catch\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        catch\n                        \n                    \n                \n            \n            \n                \ncatch(exception, host: ArgumentsHost)\n                \n            \n\n\n            \n                \n                    Defined in src/filter/http-exception.filter.ts:12\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    exception\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    host\n                                    \n                                            ArgumentsHost\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import {\n  ArgumentsHost,\n  Catch,\n  ExceptionFilter,\n  HttpException,\n  HttpStatus,\n} from '@nestjs/common';\nimport { Response } from 'express';\n\n@Catch()\nexport class HttpExceptionFilter implements ExceptionFilter {\n  catch(exception: unknown, host: ArgumentsHost) {\n    const context = host.switchToHttp();\n    const response = context.getResponse();\n    const request = context.getRequest();\n\n    const status =\n      exception instanceof HttpException\n        ? exception.getStatus()\n        : HttpStatus.INTERNAL_SERVER_ERROR;\n\n    let msg = null;\n\n    if (exception instanceof HttpException) {\n      const resp = exception.getResponse();\n      const { statusCode, error, message } = resp as Record;\n      msg = message;\n    } else {\n      msg = JSON.stringify(exception);\n    }\n\n    response.status(status).json({\n      statusCode: status,\n      msg: [].concat(msg),\n      timestamp: new Date().toISOString(),\n      path: request.url,\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/JwtAuthGuard.html":{"url":"injectables/JwtAuthGuard.html","title":"injectable - JwtAuthGuard","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  JwtAuthGuard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/authGuard/jwt-auth.guard.ts\n        \n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { AuthGuard } from '@nestjs/passport';\n\n@Injectable()\nexport class JwtAuthGuard extends AuthGuard('jwt') {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/JwtPayload.html":{"url":"interfaces/JwtPayload.html","title":"interface - JwtPayload","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  JwtPayload\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/strategy/jwt/jwt.payload.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            exp\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            iat\n                                        \n                                \n                                \n                                        \n                                            sub\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        exp\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        exp:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        iat\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        iat:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        sub\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        sub:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface JwtPayload {\n  sub: string;\n  iat?: number;\n  exp?: number;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/JwtStrategy.html":{"url":"injectables/JwtStrategy.html","title":"injectable - JwtStrategy","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  JwtStrategy\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/strategy/jwt/jwt.strategy.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Readonly\n                                logger\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                validate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(authService: AuthService, configService: ConfigService)\n                    \n                \n                        \n                            \n                                Defined in src/auth/strategy/jwt/jwt.strategy.ts:10\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                        AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        configService\n                                                  \n                                                        \n                                                                    ConfigService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        validate\n                        \n                    \n                \n            \n            \n                \n                    \n                    validate(payload: JwtPayload)\n                \n            \n\n\n            \n                \n                    Defined in src/auth/strategy/jwt/jwt.strategy.ts:23\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    payload\n                                    \n                                                JwtPayload\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        logger\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Logger(JwtStrategy.name)\n                    \n                \n                    \n                        \n                                Defined in src/auth/strategy/jwt/jwt.strategy.ts:10\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Inject, Injectable, Logger } from '@nestjs/common';\nimport { ConfigService } from '@nestjs/config';\nimport { PassportStrategy } from '@nestjs/passport';\nimport { ExtractJwt, Strategy } from 'passport-jwt';\nimport { AuthService } from 'src/auth/auth.service';\nimport { JwtPayload } from './jwt.payload';\n\n@Injectable()\nexport class JwtStrategy extends PassportStrategy(Strategy) {\n  private readonly logger = new Logger(JwtStrategy.name);\n\n  constructor(\n    private readonly authService: AuthService,\n    @Inject(ConfigService)\n    private readonly configService: ConfigService,\n  ) {\n    super({\n      jwtFromRequest: ExtractJwt.fromAuthHeaderAsBearerToken(),\n      secretOrKey: configService.get('JWT_SECRET_KEY'),\n    });\n  }\n\n  async validate(payload: JwtPayload): Promise {\n    return await this.authService.validate(payload);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/LocalAuthGuard.html":{"url":"injectables/LocalAuthGuard.html","title":"injectable - LocalAuthGuard","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  LocalAuthGuard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/authGuard/local-auth.guard.ts\n        \n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { AuthGuard } from '@nestjs/passport';\n\n@Injectable()\nexport class LocalAuthGuard extends AuthGuard('local') {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/LocalStrategy.html":{"url":"injectables/LocalStrategy.html","title":"injectable - LocalStrategy","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  LocalStrategy\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/strategy/local/local.strategy.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                validate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(authService: AuthService)\n                    \n                \n                        \n                            \n                                Defined in src/auth/strategy/local/local.strategy.ts:7\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                        AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        validate\n                        \n                    \n                \n            \n            \n                \n                    \n                    validate(email: string, password: string)\n                \n            \n\n\n            \n                \n                    Defined in src/auth/strategy/local/local.strategy.ts:15\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    email\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    password\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { PassportStrategy } from '@nestjs/passport';\nimport { Strategy } from 'passport-local';\nimport { AuthService } from 'src/auth/auth.service';\n\n@Injectable()\nexport class LocalStrategy extends PassportStrategy(Strategy) {\n  constructor(private readonly authService: AuthService) {\n    super({\n      usernameField: 'email',\n      passwordField: 'password',\n    });\n  }\n\n  async validate(email: string, password: string): Promise {\n    return await this.authService.validateUser(email, password);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/LoggerMiddleware.html":{"url":"injectables/LoggerMiddleware.html","title":"injectable - LoggerMiddleware","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  LoggerMiddleware\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/middleware/logger.middleware.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Readonly\n                                logger\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                use\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        use\n                        \n                    \n                \n            \n            \n                \nuse(request: Request, response: Response, next: NextFunction)\n                \n            \n\n\n            \n                \n                    Defined in src/middleware/logger.middleware.ts:8\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    request\n                                    \n                                            Request\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    response\n                                    \n                                            Response\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    next\n                                    \n                                            NextFunction\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        logger\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Logger(LoggerMiddleware.name)\n                    \n                \n                    \n                        \n                                Defined in src/middleware/logger.middleware.ts:6\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable, Logger, NestMiddleware } from '@nestjs/common';\nimport { Request, Response, NextFunction } from 'express';\n\n@Injectable()\nexport class LoggerMiddleware implements NestMiddleware {\n  private readonly logger = new Logger(LoggerMiddleware.name);\n\n  use(request: Request, response: Response, next: NextFunction): void {\n    const startAt = process.hrtime();\n    const { ip, method, originalUrl } = request;\n    const userAgent = request.get('user-agent') || '';\n\n    response.on('finish', () => {\n      const { statusCode } = response;\n      const contentLength = response.get('content-length');\n      const diff = process.hrtime(startAt);\n      const responseTime = diff[0] * 1e3 + diff[1] * 1e-6;\n      this.logger.log(\n        `${method} ${originalUrl} ${ip} ${statusCode} ${responseTime}ms ${contentLength} - ${userAgent}`,\n      );\n    });\n\n    next();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/LoginDto.html":{"url":"classes/LoginDto.html","title":"class - LoginDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  LoginDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/dto/login.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                email\n                            \n                            \n                                    \n                                password\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty()@IsEmail()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/auth/dto/login.dto.ts:6\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        password\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/auth/dto/login.dto.ts:9\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsEmail, IsNotEmpty } from 'class-validator';\n\nexport class LoginDto {\n  @IsNotEmpty()\n  @IsEmail()\n  email: string;\n\n  @IsNotEmpty()\n  password: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/TypeOrmConfigService.html":{"url":"injectables/TypeOrmConfigService.html","title":"injectable - TypeOrmConfigService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  TypeOrmConfigService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/shared/typeorm/typeorm.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    Private\n                                    Readonly\n                                configService\n                            \n                            \n                                    Private\n                                    Readonly\n                                logger\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                createTypeOrmOptions\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        createTypeOrmOptions\n                        \n                    \n                \n            \n            \n                \n                    \n                    createTypeOrmOptions()\n                \n            \n\n\n            \n                \n                    Defined in src/shared/typeorm/typeorm.service.ts:11\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     TypeOrmModuleOptions\n\n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Private\n                            Readonly\n                        configService\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ConfigService\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Inject(ConfigService)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/shared/typeorm/typeorm.service.ts:9\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        logger\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Logger(TypeOrmConfigService.name)\n                    \n                \n                    \n                        \n                                Defined in src/shared/typeorm/typeorm.service.ts:7\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable, Inject, Logger } from '@nestjs/common';\nimport { ConfigService } from '@nestjs/config';\nimport { TypeOrmOptionsFactory, TypeOrmModuleOptions } from '@nestjs/typeorm';\n\n@Injectable()\nexport class TypeOrmConfigService implements TypeOrmOptionsFactory {\n  private readonly logger = new Logger(TypeOrmConfigService.name);\n  @Inject(ConfigService)\n  private readonly configService: ConfigService;\n\n  public createTypeOrmOptions(): TypeOrmModuleOptions {\n    this.logger.log(\n      `Application DATABASE_HOST -> ${this.configService.get(\n        'DATABASE_HOST',\n      )}`,\n    );\n\n    return {\n      type: 'postgres',\n      host: this.configService.get('DATABASE_HOST') || 'localhost',\n      port: this.configService.get('DATABASE_PORT') || 5432,\n      database: this.configService.get('DATABASE_NAME') || 'nest',\n      username:\n        this.configService.get('DATABASE_USERNAME') || 'postgres',\n      password:\n        this.configService.get('DATABASE_PASSWORD') || 'postgres',\n      autoLoadEntities: true,\n      keepConnectionAlive: true,\n      entities: ['dist/**/*.entity.{ts,js}'],\n      migrations: ['dist/migrations/*.{ts,js}'],\n      migrationsTableName: 'typeorm_migrations',\n      migrationsRun: true, // alternative, use CLI and run migration:run command.\n      logger: 'file',\n      logging: true,\n      synchronize:\n        this.configService.get('NODE_ENV') === 'production'\n          ? false\n          : false, // one should never use TRUE in production!\n      cache: {\n        ignoreErrors: true,\n        duration: 30000, // 30 seconds\n      },\n      /*cli: {\n        entitiesDir: 'src',\n        migrationsDir: 'migrations',\n      }*/\n    };\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateUserDto.html":{"url":"classes/UpdateUserDto.html","title":"class - UpdateUserDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateUserDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/user/dto/update-user.dto.ts\n        \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { PartialType } from '@nestjs/mapped-types';\nimport { CreateUserDto } from './create-user.dto';\n\nexport class UpdateUserDto extends PartialType(CreateUserDto) {}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"entities/User.html":{"url":"entities/User.html","title":"entity - User","body":"\n                   \n\n\n\n\n\n\n\n  Entities\n  User\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/user/entities/user.entity.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                createdAt\n                            \n                            \n                                    \n                                createdBy\n                            \n                            \n                                    \n                                email\n                            \n                            \n                                    \n                                firstName\n                            \n                            \n                                    \n                                id\n                            \n                            \n                                    \n                                lastName\n                            \n                            \n                                    \n                                    \n                                password\n                            \n                            \n                                    \n                                updatedAt\n                            \n                            \n                                    \n                                updatedBy\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        createdAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @CreateDateColumn({type: 'timestamptz', default: () => CURRENT_TIMESTAMP})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/user/entities/user.entity.ts:41\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        createdBy\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/user/entities/user.entity.ts:44\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({unique: true, transformer: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/user/entities/user.entity.ts:28\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        firstName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/user/entities/user.entity.ts:35\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @PrimaryGeneratedColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/user/entities/user.entity.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        lastName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/user/entities/user.entity.ts:38\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        password\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Exclude()@Column()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/user/entities/user.entity.ts:32\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        updatedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @UpdateDateColumn({type: 'timestamptz', default: () => CURRENT_TIMESTAMP})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/user/entities/user.entity.ts:47\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        updatedBy\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/user/entities/user.entity.ts:50\n                        \n                    \n\n\n        \n    \n\n    \n\n\n    \n        import { Exclude, Expose } from 'class-transformer';\nimport {\n  BeforeInsert,\n  Column,\n  CreateDateColumn,\n  Entity,\n  PrimaryGeneratedColumn,\n  UpdateDateColumn,\n} from 'typeorm';\nimport * as bcrypt from 'bcrypt';\n\n@Entity({ name: 'users' })\nexport class User {\n  @PrimaryGeneratedColumn()\n  id: number;\n\n  @Column({\n    unique: true,\n    transformer: {\n      to: (value: string) => {\n        return value.toLowerCase();\n      },\n      from: (value: string) => {\n        return value;\n      },\n    },\n  })\n  email: string;\n\n  @Exclude()\n  @Column()\n  password: string;\n\n  @Column({ nullable: true })\n  firstName: string;\n\n  @Column({ nullable: true })\n  lastName: string;\n\n  @CreateDateColumn({ type: 'timestamptz', default: () => 'CURRENT_TIMESTAMP' })\n  createdAt: Date;\n\n  @Column({ nullable: true })\n  createdBy: string;\n\n  @UpdateDateColumn({ type: 'timestamptz', default: () => 'CURRENT_TIMESTAMP' })\n  updatedAt: Date;\n\n  @Column({ nullable: true })\n  updatedBy: string;\n\n  @Expose()\n  get fullName(): string {\n    return `${this.firstName} ${this.lastName}`;\n  }\n\n  @BeforeInsert()\n  async setPassword(password: string) {\n    const salt = await bcrypt.genSalt();\n    this.password = await bcrypt.hash(password || this.password, salt);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/UserController.html":{"url":"controllers/UserController.html","title":"controller - UserController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  UserController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/user/user.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                users\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                create\n                            \n                            \n                                    \n                                findAll\n                            \n                            \n                                    \n                                    \n                                    \n                                findOne\n                            \n                            \n                                    \n                                remove\n                            \n                            \n                                    \n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        create\n                        \n                    \n                \n            \n            \n                \n                    \n                    create(createUserDto: CreateUserDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post()\n                \n            \n\n            \n                \n                    Defined in src/user/user.controller.ts:34\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    createUserDto\n                                    \n                                                CreateUserDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        findAll\n                        \n                    \n                \n            \n            \n                \n                    \n                    findAll()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()\n                \n            \n\n            \n                \n                    Defined in src/user/user.controller.ts:39\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        \n                        \n                        findOne\n                        \n                    \n                \n            \n            \n                \n                    \n                    findOne(id: number)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @UseGuards(JwtAuthGuard)@ApiBearerAuth('accessToken')@Get(':id')\n                \n            \n\n            \n                \n                    Defined in src/user/user.controller.ts:46\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        remove\n                        \n                    \n                \n            \n            \n                \n                    \n                    remove(id: number)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Delete(':id')\n                \n            \n\n            \n                \n                    Defined in src/user/user.controller.ts:56\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        update\n                        \n                    \n                \n            \n            \n                \n                    \n                    update(id: number, updateUserDto: UpdateUserDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Patch(':id')\n                \n            \n\n            \n                \n                    Defined in src/user/user.controller.ts:51\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    updateUserDto\n                                    \n                                                UpdateUserDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import {\n  Controller,\n  Get,\n  Post,\n  Body,\n  Patch,\n  Param,\n  Delete,\n  UseGuards,\n  Logger,\n  Inject,\n  ClassSerializerInterceptor,\n  UseInterceptors,\n} from '@nestjs/common';\nimport { UserService } from './user.service';\nimport { CreateUserDto } from './dto/create-user.dto';\nimport { UpdateUserDto } from './dto/update-user.dto';\nimport { ApiBearerAuth, ApiTags } from '@nestjs/swagger';\nimport { JwtAuthGuard } from 'src/auth/authGuard/jwt-auth.guard';\nimport { ConfigService } from '@nestjs/config';\n\n@ApiTags('users')\n@Controller('users')\n@UseInterceptors(ClassSerializerInterceptor)\nexport class UserController {\n  private readonly logger = new Logger(UserController.name);\n\n  constructor(\n    private readonly userService: UserService,\n    @Inject(ConfigService) private readonly configService: ConfigService,\n  ) {}\n\n  @Post()\n  create(@Body() createUserDto: CreateUserDto) {\n    return this.userService.create(createUserDto);\n  }\n\n  @Get()\n  findAll() {\n    return this.userService.findAll();\n  }\n\n  @UseGuards(JwtAuthGuard)\n  @ApiBearerAuth('accessToken')\n  @Get(':id')\n  findOne(@Param('id') id: number) {\n    return this.userService.findUserById(id);\n  }\n\n  @Patch(':id')\n  update(@Param('id') id: number, @Body() updateUserDto: UpdateUserDto) {\n    return this.userService.update(id, updateUserDto);\n  }\n\n  @Delete(':id')\n  remove(@Param('id') id: number) {\n    return this.userService.remove(id);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/UserModule.html":{"url":"modules/UserModule.html","title":"module - UserModule","body":"\n                   \n\n\n\n\n    Modules\n    UserModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_UserModule\n\n\n\ncluster_UserModule_exports\n\n\n\ncluster_UserModule_providers\n\n\n\n\nUserService \n\nUserService \n\n\n\nUserModule\n\nUserModule\n\nUserService  -->\n\nUserModule->UserService \n\n\n\n\n\nUserService\n\nUserService\n\nUserModule -->\n\nUserService->UserModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/user/user.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            UserService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            UserController\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            UserService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { TypeOrmModule } from '@nestjs/typeorm';\nimport { User } from './entities/user.entity';\nimport { UserController } from './user.controller';\nimport { UserService } from './user.service';\n\n@Module({\n  imports: [TypeOrmModule.forFeature([User])],\n  controllers: [UserController],\n  providers: [UserService],\n  exports: [UserService],\n})\nexport class UserModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/UserService.html":{"url":"injectables/UserService.html","title":"injectable - UserService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  UserService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/user/user.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Readonly\n                                logger\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                create\n                            \n                            \n                                    Async\n                                findAll\n                            \n                            \n                                    Async\n                                findUserByEmail\n                            \n                            \n                                    Async\n                                findUserById\n                            \n                            \n                                    Async\n                                remove\n                            \n                            \n                                    Async\n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(usersRepository: Repository, configService: ConfigService)\n                    \n                \n                        \n                            \n                                Defined in src/user/user.service.ts:11\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        usersRepository\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        configService\n                                                  \n                                                        \n                                                                    ConfigService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                    \n                    create(createUserDto: CreateUserDto)\n                \n            \n\n\n            \n                \n                    Defined in src/user/user.service.ts:18\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    createUserDto\n                                    \n                                                CreateUserDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findAll\n                        \n                    \n                \n            \n            \n                \n                    \n                    findAll()\n                \n            \n\n\n            \n                \n                    Defined in src/user/user.service.ts:28\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     unknown\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findUserByEmail\n                        \n                    \n                \n            \n            \n                \n                    \n                    findUserByEmail(email: string)\n                \n            \n\n\n            \n                \n                    Defined in src/user/user.service.ts:40\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    email\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findUserById\n                        \n                    \n                \n            \n            \n                \n                    \n                    findUserById(id: number)\n                \n            \n\n\n            \n                \n                    Defined in src/user/user.service.ts:48\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        remove\n                        \n                    \n                \n            \n            \n                \n                    \n                    remove(id: number)\n                \n            \n\n\n            \n                \n                    Defined in src/user/user.service.ts:36\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        update\n                        \n                    \n                \n            \n            \n                \n                    \n                    update(id: number, updateUserDto: UpdateUserDto)\n                \n            \n\n\n            \n                \n                    Defined in src/user/user.service.ts:32\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    updateUserDto\n                                    \n                                                UpdateUserDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        logger\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Logger(UserService.name)\n                    \n                \n                    \n                        \n                                Defined in src/user/user.service.ts:11\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Inject, Injectable, Logger } from '@nestjs/common';\nimport { ConfigService } from '@nestjs/config';\nimport { InjectRepository } from '@nestjs/typeorm';\nimport { Repository } from 'typeorm';\nimport { CreateUserDto } from './dto/create-user.dto';\nimport { UpdateUserDto } from './dto/update-user.dto';\nimport { User } from './entities/user.entity';\n\n@Injectable()\nexport class UserService {\n  private readonly logger = new Logger(UserService.name);\n\n  constructor(\n    @InjectRepository(User) private readonly usersRepository: Repository,\n    @Inject(ConfigService) private readonly configService: ConfigService,\n  ) {}\n\n  async create(createUserDto: CreateUserDto) {\n    const user = new User();\n    user.email = createUserDto.email;\n    user.password = createUserDto.password;\n    user.firstName = createUserDto.firstName;\n    user.lastName = createUserDto.lastName;\n\n    return await this.usersRepository.save(user);\n  }\n\n  async findAll() {\n    return await this.usersRepository.find();\n  }\n\n  async update(id: number, updateUserDto: UpdateUserDto) {\n    return await this.usersRepository.update({ id }, updateUserDto);\n  }\n\n  async remove(id: number) {\n    return await this.usersRepository.delete({ id });\n  }\n\n  async findUserByEmail(email: string): Promise {\n    return await this.usersRepository.findOne({\n      where: {\n        email: email,\n      },\n    });\n  }\n\n  async findUserById(id: number): Promise {\n    return await this.usersRepository.findOne({ where: { id: id } });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Users1694279542731.html":{"url":"classes/Users1694279542731.html","title":"class - Users1694279542731","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Users1694279542731\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/migrations/1694279542731-users.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                        MigrationInterface\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                name\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Async\n                                down\n                            \n                            \n                                    Public\n                                    Async\n                                up\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'Users1694279542731'\n                    \n                \n                    \n                        \n                                Defined in src/migrations/1694279542731-users.ts:4\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Async\n                        down\n                        \n                    \n                \n            \n            \n                \n                    \n                    down(queryRunner: QueryRunner)\n                \n            \n\n\n            \n                \n                    Defined in src/migrations/1694279542731-users.ts:15\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    queryRunner\n                                    \n                                            QueryRunner\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Async\n                        up\n                        \n                    \n                \n            \n            \n                \n                    \n                    up(queryRunner: QueryRunner)\n                \n            \n\n\n            \n                \n                    Defined in src/migrations/1694279542731-users.ts:6\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    queryRunner\n                                    \n                                            QueryRunner\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { MigrationInterface, QueryRunner } from 'typeorm';\n\nexport class Users1694279542731 implements MigrationInterface {\n  name = 'Users1694279542731';\n\n  public async up(queryRunner: QueryRunner): Promise {\n    await queryRunner.query(\n      `CREATE TABLE \"users\" (\"id\" SERIAL NOT NULL, \"email\" character varying NOT NULL, \"password\" character varying NOT NULL, \"firstName\" character varying, \"lastName\" character varying, \"createdAt\" TIMESTAMP WITH TIME ZONE NOT NULL DEFAULT now(), \"createdBy\" character varying, \"updatedAt\" TIMESTAMP WITH TIME ZONE NOT NULL DEFAULT now(), \"updatedBy\" character varying, CONSTRAINT \"UQ_97672ac88f789774dd47f7c8be3\" UNIQUE (\"email\"), CONSTRAINT \"PK_a3ffb1c0c8416b9fc6f907b7433\" PRIMARY KEY (\"id\"))`,\n    );\n    await queryRunner.query(\n      `CREATE TABLE \"query-result-cache\" (\"id\" SERIAL NOT NULL, \"identifier\" character varying, \"time\" bigint NOT NULL, \"duration\" integer NOT NULL, \"query\" text NOT NULL, \"result\" text NOT NULL, CONSTRAINT \"PK_6a98f758d8bfd010e7e10ffd3d3\" PRIMARY KEY (\"id\"))`,\n    );\n  }\n\n  public async down(queryRunner: QueryRunner): Promise {\n    await queryRunner.query(`DROP TABLE \"query-result-cache\"`);\n    await queryRunner.query(`DROP TABLE \"users\"`);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                src/app.controller.ts\n            \n            controller\n            AppController\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/app.module.ts\n            \n            variable\n            envFilePath\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app.service.ts\n            \n            injectable\n            AppService\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/auth/auth.controller.ts\n            \n            controller\n            AuthController\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/auth/auth.service.ts\n            \n            injectable\n            AuthService\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/auth/authGuard/jwt-auth.guard.ts\n            \n            injectable\n            JwtAuthGuard\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/auth/authGuard/local-auth.guard.ts\n            \n            injectable\n            LocalAuthGuard\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/auth/dto/login.dto.ts\n            \n            class\n            LoginDto\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/auth/strategy/jwt/jwt.payload.ts\n            \n            interface\n            JwtPayload\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/auth/strategy/jwt/jwt.strategy.ts\n            \n            injectable\n            JwtStrategy\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/auth/strategy/local/local.strategy.ts\n            \n            injectable\n            LocalStrategy\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/filter/http-exception.filter.ts\n            \n            class\n            HttpExceptionFilter\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/main.ts\n            \n            function\n            bootstrap\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/main.ts\n            \n            variable\n            module\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/middleware/logger.middleware.ts\n            \n            injectable\n            LoggerMiddleware\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/migrations/1694279542731-users.ts\n            \n            class\n            Users1694279542731\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/shared/helper/env.helper.ts\n            \n            function\n            getEnvPath\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/shared/swagger/index.ts\n            \n            variable\n            setupSwagger\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/shared/typeorm/typeorm.service.ts\n            \n            injectable\n            TypeOrmConfigService\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/user/dto/create-user.dto.ts\n            \n            class\n            CreateUserDto\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/user/dto/update-user.dto.ts\n            \n            class\n            UpdateUserDto\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/user/entities/user.entity.ts\n            \n            entity\n            User\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/user/user.controller.ts\n            \n            controller\n            UserController\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/user/user.service.ts\n            \n            injectable\n            UserService\n            \n                0 %\n                (0/9)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @algoan/nestjs-logging-interceptor : ^2.1.10\n        \n            @nestjs/axios : ^0.0.8\n        \n            @nestjs/common : ^8.0.0\n        \n            @nestjs/config : ^2.0.0\n        \n            @nestjs/core : ^8.0.0\n        \n            @nestjs/jwt : ^8.0.1\n        \n            @nestjs/mapped-types : *\n        \n            @nestjs/passport : ^8.2.1\n        \n            @nestjs/platform-express : ^8.0.0\n        \n            @nestjs/swagger : ^5.2.1\n        \n            @nestjs/typeorm : ^8.0.3\n        \n            bcrypt : ^5.0.1\n        \n            class-transformer : ^0.5.1\n        \n            class-validator : ^0.13.2\n        \n            cross-env : ^7.0.3\n        \n            helmet : ^5.1.0\n        \n            joi : ^17.6.0\n        \n            passport : ^0.6.0\n        \n            passport-jwt : ^4.0.0\n        \n            passport-local : ^1.0.0\n        \n            passport-saml : ^3.2.1\n        \n            pg : ^8.7.3\n        \n            reflect-metadata : ^0.1.13\n        \n            rimraf : ^3.0.2\n        \n            rxjs : ^7.2.0\n        \n            swagger-ui-express : ^4.4.0\n        \n            typeorm : ^0.3.6\n        \n            webpack : ^5.72.1\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            bootstrap   (src/.../main.ts)\n                        \n                        \n                            getEnvPath   (src/.../env.helper.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/main.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        bootstrap\n                        \n                    \n                \n            \n            \n                \nbootstrap()\n                \n            \n\n\n\n\n        \n    \n    src/shared/helper/env.helper.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        getEnvPath\n                        \n                    \n                \n            \n            \n                \ngetEnvPath(dest: string)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    dest\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\n\n  \n\n\n  A progressive Node.js framework for building efficient and scalable server-side applications.\n    \n  \n\nDescription\nNest Framework TypeScript.\nInstallation\n$ npm installEnvironment variable configuration\nCreate .env file at root folder, please refer .env.sample at the same location. It is requried by docker-compose.yml file while spining postgis and pgadmin.\nAlso create .env.development, .env.staging and .env.production at location './src/shared/config/env/', please refer .env.sample at the same location. It is requried by docker-compose.yml file.\nPlease refer docker-compose.yml file for details.\nBefore running the app create database\nDatabase name as mentioned in environment file.\n\n-- Database: db_changeit\n\n-- DROP DATABASE IF EXISTS db_changeit;\n\nCREATE DATABASE db_changeit\n    WITH\n    OWNER = postgres\n    ENCODING = 'UTF8'\n    LC_COLLATE = 'English_United States.1252'\n    LC_CTYPE = 'English_United States.1252'\n    TABLESPACE = pg_default\n    CONNECTION LIMIT = -1\n    IS_TEMPLATE = False;\nRunning the app\nIf one have postgis i.e database setup already configured\n# development\n$ npm run start\n\n# watch mode\n$ npm run start:dev\n\n# production mode\n$ npm run start:prodRunning the app using docker\nDocker is an open platform for developing, shipping, and running applications.\nThe applcation is also spining up local postgis server with docker-compose along with pgadmin.\n# development\n$ docker-compose up development -d\n\n# staging\n$ docker-compose up staging -d\n\n# production mode\n$ docker-compose up production -dTest\n# unit tests\n$ npm run test\n\n# e2e tests\n$ npm run test:e2e\n\n# test coverage\n$ npm run test:covSwagger UI\nSwagger UI allows anyone — be it your development team or your end consumers — to visualize and interact with the API’s resources.\nhttp://localhost:3000/docsProject Documentation\nCompodoc is a documentation tool for Angular applications. Since Nest and Angular share similar project and code structures, Compodoc works with Nest applications as well.\nGeneration\n$ npx @compodoc/compodoc -p tsconfig.json -sSee the official documentation for more options.\nOpen your browser and navigate to http://localhost:8080\nTypeorm Migrations\nTypeorm Migrations Please refer to understand migrations\nIf any changes in database i.e entities, please execute typeorm migration:generate it will generate migration scripts. \n# generate scripts\n$ npm run typeorm:migration:generate\n\n# run scripts\n$ npm run typeorm:migration:run\nImport GeoJSON to PostGIS:\nOgr2ogr is the swiss-army knife when it comes to conversion of GIS data. It is part of the Geospatial Data Abstraction Library and provides an easy way to convert data between common storage formats: GeoJSON, Shapefile, PostGIS and others.\nFor install and how to import GeoJSON to PostGIS, Please refer the links\nGDAL Please refer to understand installion\nImport GeoJSON to PostGIS Please refer to import\n# Import GeoJSON to PostGIS (Command Line)\n$ C:\\OSGeo4W\\bin>ogr2ogr -f \"PostgreSQL\" PG:\"dbname=your-database-name user=your-username password=mypassword\" /path/to/jour/GeoJSon/file -nln table-name -appendHosting Application\nTwo ways to deploy application\n\nphusionpassenger\n\nPassenger® is an app server that runs and automanages your web apps with ease. Also improves security, reliability and scalability.\nDeploying a Node.js app on a Linux/Unix production server\n\nKubernetes\n\nKubernetes, also known as K8s, is an open-source system for automating deployment, scaling, and management of containerized applications.\nDeploy a Container Web App on Amazon EKS One can use Kubernetes (k8s) from any cloud provider.\nSupport\nNest is an MIT-licensed open source project. It can grow thanks to the sponsors and support by the amazing backers. If you'd like to join them, please read more here.\n\nWebsite - https://nestjs.com\n\nLicense\nNest is MIT licensed.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AuthModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        UserModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_providers\n\n\n\ncluster_AuthModule\n\n\n\ncluster_AuthModule_exports\n\n\n\ncluster_AuthModule_providers\n\n\n\ncluster_UserModule\n\n\n\ncluster_UserModule_exports\n\n\n\ncluster_UserModule_providers\n\n\n\n\nAuthModule\n\nAuthModule\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAuthModule->AppModule\n\n\n\n\n\nAuthService \n\nAuthService \n\nAuthService  -->\n\nAuthModule->AuthService \n\n\n\n\n\nUserModule\n\nUserModule\n\nAuthModule -->\n\nUserModule->AuthModule\n\n\n\nAppModule -->\n\nUserModule->AppModule\n\n\n\n\n\nUserService \n\nUserService \n\nUserService  -->\n\nUserModule->UserService \n\n\n\n\n\nAppService\n\nAppService\n\nAppModule -->\n\nAppService->AppModule\n\n\n\n\n\nAuthService\n\nAuthService\n\nAuthModule -->\n\nAuthService->AuthModule\n\n\n\n\n\nJwtStrategy\n\nJwtStrategy\n\nAuthModule -->\n\nJwtStrategy->AuthModule\n\n\n\n\n\nLocalStrategy\n\nLocalStrategy\n\nAuthModule -->\n\nLocalStrategy->AuthModule\n\n\n\n\n\nUserService\n\nUserService\n\nUserModule -->\n\nUserService->UserModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        3 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    3 Controllers\n                \n            \n        \n        \n            \n                \n                    \n                    1 Entities\n                \n            \n        \n        \n            \n                \n                    \n                    9 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    5 Classes\n                \n            \n        \n        \n            \n                \n                    \n                    1 Interface\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"properties.html":{"url":"properties.html","title":"package-properties - properties","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Properties\n    \n    \n        \n            Version : 0.0.1\n        \n            Description : \n        \n            License : UNLICENSED\n        \n            Author : \n    \n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            envFilePath   (src/.../app.module.ts)\n                        \n                        \n                            module   (src/.../main.ts)\n                        \n                        \n                            setupSwagger   (src/.../index.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/app.module.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        envFilePath\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : getEnvPath(`${__dirname}/shared/config/env`)\n                    \n                \n\n\n        \n    \n\n    src/main.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        module\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n\n\n        \n    \n\n    src/shared/swagger/index.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        setupSwagger\n                        \n                    \n                \n            \n                \n                    \n                        Default value : (app: INestApplication) => {\n  const options = new DocumentBuilder()\n    .setTitle('Nestjs Blue Sky Application')\n    .setDescription('API description')\n    .setVersion('1.0')\n    .addBearerAuth(\n      {\n        type: 'http',\n        scheme: 'bearer',\n        bearerFormat: 'JWT',\n        name: 'JWT',\n        description: 'Enter token',\n        in: 'header',\n      },\n      'accessToken',\n    )\n    .build();\n  const document = SwaggerModule.createDocument(app, options);\n  const customOptions: SwaggerCustomOptions = {\n    swaggerOptions: {\n      persistAuthorization: true,\n    },\n    customSiteTitle: 'API Docs',\n  };\n  SwaggerModule.setup('docs', app, document, customOptions);\n}\n                    \n                \n\n\n        \n    \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
